openapi: 3.0.0
servers:
  - description: The Xero Accounting API exposes accounting and related functions of the main Xero application.
    url: https://api.xero.com/api.xro/2.0
info:
  title: Xero Accounting API
  version: "2.10.4"
  termsOfService: "https://developer.xero.com/xero-developer-platform-terms-conditions/"
  contact:
    name: "Xero Platform Team"
    email: "api@xero.com"
    url: "https://developer.xero.com"
paths:
  /Contacts:
    parameters:
      - $ref: '#/components/parameters/requiredHeader'
    get:
      security:
        - OAuth2: [accounting.contacts.read]
      tags:
        - Accounting
      operationId: getContacts
      summary: Get Contacts
      description: 'Retrieves all contacts in a Xero organisation.'
      parameters:
        - $ref: '#/components/parameters/ifModifiedSince'
        - in: query
          name: where
          description: Filter by an element.
          example: ContactStatus==&quot;ACTIVE&quot;
          x-example-csharp: ContactStatus==\&quot;ACTIVE\&quot;
          x-example-java: ContactStatus==&quot;&apos; + Contact.ContactStatusEnum.ACTIVE + &apos;&quot;
          x-example-php: ContactStatus==&quot;&apos; . \XeroAPI\XeroPHP\Models\Accounting\Contact::CONTACT_STATUS_ACTIVE . &apos;&quot;
          x-example-ruby: ContactStatus==#{XeroRuby::Accounting::Contact::ACTIVE}
          schema:
            type: string
        - in: query
          name: order
          description: Order by an element.
          example: "Name ASC"
          schema:
            type: string
        - in: query
          name: IDs
          x-snake: ids
          description: Filter by a comma-separated list of contact IDs, which enables you to retrieve a specific set of contacts in a single call.
          style: form
          explode: false
          example: '&quot;00000000-0000-0000-0000-000000000000&quot;'
          x-example-java: Arrays.asList(UUID.fromString("00000000-0000-0000-0000-000000000000"))
          x-example-php: '&quot;00000000-0000-0000-0000-000000000000&quot;'
          x-example-csharp: new List&lt;Guid&gt;{Guid.Parse("00000000-0000-0000-0000-000000000000")};
          schema:
            type: array
            items:
              type: string
              format: uuid
        - in: query
          name: page
          description: For example, page=1. Up to 100 contacts will be returned in a single API call.
          example: 1
          schema:
            type: integer
        - in: query
          name: includeArchived
          x-snake: include_archived
          description: For example, includeArchived=true. Contacts with a status of ARCHIVED will be included in the response.
          schema:
            type: boolean
      responses:
        '200':
          description: Success returns a response of type Contacts array with 0 to N contacts.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contacts'
              example: '{
                            "Id": "04e93d48-e72f-4775-b7dd-15a041fab972",
                            "Status": "OK",
                            "ProviderName": "Xero API Partner",
                            "DateTimeUTC": "\/Date(1551399323399)\/",
                            "Contacts": [
                              {
                                "ContactID": "5cc8cf28-567e-4d43-b287-687cfcaec47c",
                                "ContactStatus": "ACTIVE",
                                "Name": "Katherine Warren",
                                "FirstName": "Katherine",
                                "LastName": "Warren",
                                "EmailAddress": "kat.warren@clampett.com",
                                "BankAccountDetails": "",
                                "Addresses": [
                                  {
                                    "AddressType": "STREET",
                                    "City": "",
                                    "Region": "",
                                    "PostalCode": "",
                                    "Country": ""
                                  },
                                  {
                                    "AddressType": "POBOX",
                                    "AddressLine1": "",
                                    "AddressLine2": "",
                                    "AddressLine3": "",
                                    "AddressLine4": "",
                                    "City": "Palo Alto",
                                    "Region": "CA",
                                    "PostalCode": "94020",
                                    "Country": "United States"
                                  }
                                ],
                                "Phones": [
                                  {
                                    "PhoneType": "DDI",
                                    "PhoneNumber": "",
                                    "PhoneAreaCode": "",
                                    "PhoneCountryCode": ""
                                  },
                                  {
                                    "PhoneType": "DEFAULT",
                                    "PhoneNumber": "847-1294",
                                    "PhoneAreaCode": "(626)",
                                    "PhoneCountryCode": ""
                                  },
                                  {
                                    "PhoneType": "FAX",
                                    "PhoneNumber": "",
                                    "PhoneAreaCode": "",
                                    "PhoneCountryCode": ""
                                  },
                                  {
                                    "PhoneType": "MOBILE",
                                    "PhoneNumber": "",
                                    "PhoneAreaCode": "",
                                    "PhoneCountryCode": ""
                                  }
                                ],
                                "UpdatedDateUTC": "\/Date(1503348544227+0000)\/",
                                "ContactGroups": [],
                                "IsSupplier": true,
                                "IsCustomer": true,
                                "Balances": {
                                  "AccountsReceivable": {
                                    "Outstanding": 760.00,
                                    "Overdue": 920.00
                                  },
                                  "AccountsPayable": {
                                    "Outstanding": 231.60,
                                    "Overdue": 360.00
                                  }
                                },
                                "ContactPersons": [],
                                "HasAttachments": false,
                                "HasValidationErrors": false
                              },
                              {
                                "ContactID": "3ec601ad-eddc-4ccb-a8ac-736e88293b1b",
                                "ContactStatus": "ACTIVE",
                                "Name": "Lisa Parker",
                                "FirstName": "Lisa",
                                "LastName": "Parker",
                                "EmailAddress": "lparker@parkerandco.com",
                                "BankAccountDetails": "",
                                "Addresses": [
                                  {
                                    "AddressType": "STREET",
                                    "City": "",
                                    "Region": "",
                                    "PostalCode": "",
                                    "Country": ""
                                  },
                                  {
                                    "AddressType": "POBOX",
                                    "AddressLine1": "",
                                    "AddressLine2": "",
                                    "AddressLine3": "",
                                    "AddressLine4": "",
                                    "City": "Anchorage",
                                    "Region": "AK",
                                    "PostalCode": "99501",
                                    "Country": "United States"
                                  }
                                ],
                                "Phones": [
                                  {
                                    "PhoneType": "DDI",
                                    "PhoneNumber": "",
                                    "PhoneAreaCode": "",
                                    "PhoneCountryCode": ""
                                  },
                                  {
                                    "PhoneType": "DEFAULT",
                                    "PhoneNumber": "266-3583",
                                    "PhoneAreaCode": "(510)",
                                    "PhoneCountryCode": ""
                                  },
                                  {
                                    "PhoneType": "FAX",
                                    "PhoneNumber": "",
                                    "PhoneAreaCode": "",
                                    "PhoneCountryCode": ""
                                  },
                                  {
                                    "PhoneType": "MOBILE",
                                    "PhoneNumber": "",
                                    "PhoneAreaCode": "",
                                    "PhoneCountryCode": ""
                                  }
                                ],
                                "UpdatedDateUTC": "\/Date(1503348546760+0000)\/",
                                "ContactGroups": [],
                                "IsSupplier": false,
                                "IsCustomer": false,
                                "ContactPersons": [],
                                "HasAttachments": false,
                                "HasValidationErrors": false
                              }
                            ]
                          }'
    post:
      security:
        - OAuth2: [accounting.contacts]
      tags:
        - Accounting
      operationId: updateOrCreateContacts
      summary: Update Or Create Contacts
      description: 'Updates or creates one or more contacts in a Xero organisation.'
      x-hasAccountingValidationError: true
      x-example:
        - phone:
          is_object: true
          key: phone
          keyPascal: Phone
        - phoneNumber:
          key: phoneNumber
          keyPascal: PhoneNumber
          keySnake: phone_number
          default: 555-1212
          object: phone
        - phoneType:
          is_last: true
          nonString: true
          key: phoneType
          keyPascal: PhoneType
          keySnake: phone_type
          default: MOBILE
          php: XeroAPI\XeroPHP\Models\Accounting\Phone::PHONE_TYPE_MOBILE
          node: Phone.PhoneTypeEnum.MOBILE
          ruby: XeroRuby::Accounting::PhoneType::MOBILE
          python_string: MOBILE
          java: com.xero.models.accounting.Phone.PhoneTypeEnum.MOBILE
          csharp: Phone.PhoneTypeEnum.MOBILE
          object: phone
        - phones:
          is_list: true
          key: phones
          keyPascal: Phone
        - add_phone:
          is_last: true
          is_list_add: true
          key: phones
          keyPascal: Phones
          object: phone
        - contact:
          is_object: true
          key: contact
          keyPascal: Contact
        - name:
          key: name
          keyPascal: Name
          default: Bruce Banner
          object: contact
        - emailAddress:
          key: emailAddress
          keyPascal: EmailAddress
          keySnake: email_address
          default: hulk@avengers.com
          object: contact
        - set_phones:
          is_last: true
          is_variable: true
          nonString: true
          key: phones
          keyPascal: Phones
          default: phones
          object: contact
        - contacts:
          is_object: true
          key: contacts
          keyPascal: Contacts
        - add_contact:
          is_last: true
          is_array_add: true
          key: contacts
          keyPascal: Contacts
          java: Contacts
          csharp: Contact
          object: contact
      parameters:
        - $ref: '#/components/parameters/summarizeErrors'
      responses:
        '200':
          description: Success returns a response of type Contacts array with newly created contacts.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contacts'
              example: '{
                          "Id": "e997d6d7-6dad-4458-beb8-d9c1bf7f2edf",
                          "Status": "OK",
                          "ProviderName": "Xero API Partner",
                          "DateTimeUTC": "\/Date(1551399321121)\/",
                          "Contacts": [
                            {
                              "ContactID": "00000000-0000-0000-0000-000000000000",
                              "ContactStatus": "ACTIVE",
                              "Name": "Bruce Banner",
                              "EmailAddress": "bruce@banner.com",
                              "BankAccountDetails": "",
                              "Addresses": [
                                {
                                  "AddressType": "STREET",
                                  "City": "",
                                  "Region": "",
                                  "PostalCode": "",
                                  "Country": ""
                                },
                                {
                                  "AddressType": "POBOX",
                                  "City": "",
                                  "Region": "",
                                  "PostalCode": "",
                                  "Country": ""
                                }
                              ],
                              "Phones": [
                                {
                                  "PhoneType": "DEFAULT",
                                  "PhoneNumber": "",
                                  "PhoneAreaCode": "",
                                  "PhoneCountryCode": ""
                                },
                                {
                                  "PhoneType": "DDI",
                                  "PhoneNumber": "",
                                  "PhoneAreaCode": "",
                                  "PhoneCountryCode": ""
                                },
                                {
                                  "PhoneType": "FAX",
                                  "PhoneNumber": "",
                                  "PhoneAreaCode": "",
                                  "PhoneCountryCode": ""
                                },
                                {
                                  "PhoneType": "MOBILE",
                                  "PhoneNumber": "555-1212",
                                  "PhoneAreaCode": "415",
                                  "PhoneCountryCode": ""
                                }
                              ],
                              "UpdatedDateUTC": "\/Date(1551399321043+0000)\/",
                              "ContactGroups": [],
                              "IsSupplier": false,
                              "IsCustomer": false,
                              "SalesTrackingCategories": [],
                              "PurchasesTrackingCategories": [],
                              "PaymentTerms": {
                                "Bills": {
                                  "Day": 15,
                                  "Type": "OFCURRENTMONTH"
                                },
                                "Sales": {
                                  "Day": 10,
                                  "Type": "DAYSAFTERBILLMONTH"
                                }
                              },
                              "ContactPersons": [],
                              "HasValidationErrors": false
                            }
                          ]
                        }'
        '400':
          description: Validation errors occur when some data was incorrect and returns a response of type Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example: '{
                          "ErrorNumber": 10,
                          "Type": "ValidationException",
                          "Message": "A validation exception occurred",
                          "Elements": [
                            {
                              "ContactID": "00000000-0000-0000-0000-000000000000",
                              "AccountNumber": "12345-ABCD",
                              "Name": "Buzz Lightyear",
                              "EmailAddress": "buzzlightyear@email.com",
                              "AccountsReceivableTaxType": "NONE",
                              "AccountsPayableTaxType": "INPUT",
                              "Addresses": [
                                {
                                  "AddressType": "STREET",
                                  "AddressLine1": "101 Green St",
                                  "AddressLine2": "5th floor",
                                  "City": "San Francisco",
                                  "Region": "CA",
                                  "PostalCode": "94041",
                                  "Country": "US",
                                  "AttentionTo": "Rod Drury",
                                  "ValidationErrors": []
                                }
                              ],
                              "Phones": [
                                {
                                  "PhoneType": "MOBILE",
                                  "PhoneNumber": "555-1212",
                                  "PhoneAreaCode": "415",
                                  "ValidationErrors": []
                                }
                              ],
                              "ContactGroups": [],
                              "PaymentTerms": {
                                "Bills": {
                                  "Day": 15,
                                  "Type": "OFCURRENTMONTH",
                                  "ValidationErrors": []
                                },
                                "Sales": {
                                  "Day": 10,
                                  "Type": "DAYSAFTERBILLMONTH",
                                  "ValidationErrors": []
                                }
                              },
                              "ContactPersons": [],
                              "HasValidationErrors": true,
                              "ValidationErrors": [
                                {
                                  "Message": "The contact name Buzz Lightyear is already assigned to another contact. The contact name must be unique across all active contacts."
                                }
                              ]
                            }
                          ]
                        }'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contacts'
            example: '{
                        "Contacts": [
                          {
                            "Name": "Bruce Banner",
                            "EmailAddress": "hulk@avengers.com",
                            "Phones": [
                              {
                                "PhoneType": "MOBILE",
                                "PhoneNumber": "555-1212",
                                "PhoneAreaCode": "415"
                              }
                            ],
                            "PaymentTerms": {
                              "Bills": {
                                "Day": 15,
                                "Type": "OFCURRENTMONTH"
                              },
                              "Sales": {
                                "Day": 10,
                                "Type": "DAYSAFTERBILLMONTH"
                              }
                            }
                          }
                        ]
                      }'
  '/Contacts/{ContactID}':
    parameters:
      - $ref: '#/components/parameters/requiredHeader'
    get:
      security:
        - OAuth2: [accounting.contacts.read]
      tags:
        - Accounting
      operationId: getContact
      summary: Get Contact By Contact ID
      description: 'Retrieves a specific contact in a Xero organisation using a unique contact ID.'
      parameters:
        - $ref: '#/components/parameters/ContactID'
      responses:
        '200':
          description: Success returns a response of type Contacts array with a unique contact ID.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contacts'
              example: '{
                        "Id": "5c83b115-a6e8-4f2a-877f-ba63d009235b",
                        "Status": "OK",
                        "ProviderName": "Xero API Partner",
                        "DateTimeUTC": "\/Date(1551462703288)\/",
                        "Contacts": [
                          {
                            "ContactID": "8138a266-fb42-49b2-a104-014b7045753d",
                            "ContactNumber": "SB2",
                            "AccountNumber": "1234567",
                            "ContactStatus": "ACTIVE",
                            "Name": "Acme Parts Co.",
                            "FirstName": "Blake",
                            "LastName": "Kohler",
                            "EmailAddress": "bk@krave.co",
                            "SkypeUserName": "blake",
                            "BankAccountDetails": "12334567",
                            "TaxNumber": "123-22-3456",
                            "AccountsReceivableTaxType": "TAX003",
                            "AccountsPayableTaxType": "TAX022",
                            "Addresses": [
                              {
                                "AddressType": "STREET",
                                "AddressLine1": "123 Fake Street",
                                "City": "Vancouver",
                                "Region": "British Columbia",
                                "PostalCode": "V6B 2T4",
                                "Country": "",
                                "AttentionTo": ""
                              },
                              {
                                "AddressType": "POBOX",
                                "AddressLine1": "1234 Fake Street",
                                "City": "Vancouver",
                                "Region": "British Columbia",
                                "PostalCode": "V6B 2T4",
                                "Country": "",
                                "AttentionTo": "Blake"
                              }
                            ],
                            "Phones": [
                              {
                                "PhoneType": "DDI",
                                "PhoneNumber": "489-44493",
                                "PhoneAreaCode": "345",
                                "PhoneCountryCode": "4"
                              },
                              {
                                "PhoneType": "DEFAULT",
                                "PhoneNumber": "408-0914",
                                "PhoneAreaCode": "604",
                                "PhoneCountryCode": "1"
                              },
                              {
                                "PhoneType": "FAX",
                                "PhoneNumber": "123-9933",
                                "PhoneAreaCode": "123",
                                "PhoneCountryCode": "2"
                              },
                              {
                                "PhoneType": "MOBILE",
                                "PhoneNumber": "999-44",
                                "PhoneAreaCode": "234",
                                "PhoneCountryCode": "3"
                              }
                            ],
                            "UpdatedDateUTC": "\/Date(1551459777193+0000)\/",
                            "ContactGroups": [],
                            "IsSupplier": true,
                            "IsCustomer": true,
                            "DefaultCurrency": "USD",
                            "Discount": 13.00,
                            "Website": "http://www.google.com",
                            "BrandingTheme": {
                              "BrandingThemeID": "dabc7637-62c1-4941-8a6e-ee44fa5090e7",
                              "Name": "Standard"
                            },
                            "PurchasesDefaultAccountCode": "660",
                            "SalesDefaultAccountCode": "002",
                            "BatchPayments": {
                              "BankAccountNumber": "12334567",
                              "BankAccountName": "Citi Bank",
                              "Details": "biz checking",
                              "Code": "",
                              "Reference": ""
                            },
                            "Balances": {
                              "AccountsReceivable": {
                                "Outstanding": 118.90,
                                "Overdue": 136.90
                              },
                              "AccountsPayable": {
                                "Outstanding": -43.60,
                                "Overdue": 40.00
                              }
                            },
                            "PaymentTerms": {
                              "Bills": {
                                "Day": 12,
                                "Type": "OFFOLLOWINGMONTH"
                              },
                              "Sales": {
                                "Day": 14,
                                "Type": "OFCURRENTMONTH"
                              }
                            },
                            "ContactPersons": [
                              {
                                "FirstName": "Sue",
                                "LastName": "Johnson",
                                "EmailAddress": "sue.johnson@krave.com",
                                "IncludeInEmails": true
                              }
                            ],
                            "HasAttachments": true,
                            "Attachments": [
                              {
                                "AttachmentID": "04e0a3e3-b116-456a-9f32-9706f0d33afa",
                                "FileName": "sample5.jpg",
                                "Url": "https://api.xero.com/api.xro/2.0/contact/8138a266-fb42-49b2-a104-014b7045753d/Attachments/sample5.jpg",
                                "MimeType": "image/jpg",
                                "ContentLength": 2878711
                              }
                            ],
                            "HasValidationErrors": false
                          }
                        ]
                      }'
  /Invoices:
    parameters:
      - $ref: '#/components/parameters/requiredHeader'
    post:
      security:
        - OAuth2: [accounting.transactions]
      tags:
        - Accounting
      operationId: updateOrCreateInvoices
      summary: Update Or Create Invoices
      description: Updates or creates one or more sales invoices or purchase bills.
      x-hasAccountingValidationError: true
      x-example:
        - dateValue:
          is_date: true
          key: dateValue
          keyPascal: Date
          keySnake: date_value
          java_datatype: LocalDate
          default: "LocalDate.of(2020, Month.OCTOBER, 10)"
          java: "LocalDate.of(2020, Month.OCTOBER, 10)"
          csharp: "new DateTime(2020, 10, 10)"
          php: "new DateTime('2020-10-10')"
          node: "'2020-10-10'"
          python: "dateutil.parser.parse('2020-10-10T00:00:00Z')"
          ruby: "'YYYY-MM-DD'"
        - dueDateValue:
          is_date: true
          key: dueDateValue
          keyPascal: Date
          keySnake: due_date_value
          java_datatype: LocalDate
          default: "LocalDate.of(2020, Month.OCTOBER, 28)"
          java: "LocalDate.of(2020, Month.OCTOBER, 28)"
          csharp: "new DateTime(2020, 10, 10)"
          php: "new DateTime('2020-10-28')"
          node: "'2020-10-28'"
          python: "dateutil.parser.parse('2020-10-28T00:00:00Z')"
          ruby: "'YYYY-MM-DD'"
        - contact:
          is_object: true
          key: contact
          keyPascal: Contact
        - contactID:
          is_last: true
          is_uuid: true
          key: contactID
          keyPascal: ContactID
          keySnake: contact_id
          default: 00000000-0000-0000-0000-000000000000
          object: contact
        - lineItem:
          is_object: true
          key: lineItem
          keyPascal: LineItem
          keySnake: line_item
        - description:
          key: description
          keyPascal: Description
          default: Foobar
          object: lineItem
        - quantity:
          nonString: true
          key: quantity
          keyPascal: Quantity
          default: 1.0
          is_money: true
          object: lineItem
        - unitAmount:
          nonString: true
          key: unitAmount
          keyPascal: UnitAmount
          keySnake: unit_amount
          default: 20.0
          is_money: true
          object: lineItem
        - accountCode:
          is_last: true
          key: accountCode
          keyPascal: AccountCode
          keySnake: account_code
          default: "000"
          object: lineItem
        - line_items:
          is_list: true
          key: lineItems
          keyPascal: LineItems
          keySnake: line_items
          csharp: LineItem
          java: LineItem
        - add_lineitems:
          is_last: true
          is_list_add: true
          key: lineItems
          keyPascal: LineItems
          keySnake: line_items
          java: LineItems
          python: line_item
          ruby: line_item
          csharp: LineItem
          object: lineItem
        - invoice:
          is_object: true
          key: invoice
          keyPascal: Invoice
        - type:
          nonString: true
          key: type
          keyPascal: Type
          default: ACCREC
          php: XeroAPI\XeroPHP\Models\Accounting\Invoice::TYPE_ACCREC
          node: Invoice.TypeEnum.ACCREC
          ruby: XeroRuby::Accounting::Invoice::ACCREC
          python_string: ACCREC
          java: com.xero.models.accounting.Invoice.TypeEnum.ACCREC
          csharp: Invoice.TypeEnum.ACCREC
          object: invoice
        - set_contact:
          is_variable: true
          nonString: true
          key: contact
          keyPascal: Contact
          default: contact
          object: invoice
        - date:
          is_variable: true
          nonString: true
          key: date
          keyPascal: Date
          default: dateValue
          python: date_value
          ruby: date_value
          object: invoice
        - dueDate:
          is_variable: true
          nonString: true
          key: dueDate
          keyPascal: Date
          keySnake: due_date
          default: dueDateValue
          python: due_date_value
          ruby: due_date_value
          object: invoice
        - set_lineitem:
          is_variable: true
          nonString: true
          key: lineItems
          keyPascal: LineItems
          keySnake: line_items
          default: lineItems
          python: line_items
          ruby: line_items
          object: invoice
        - reference:
          key: reference
          keyPascal: Reference
          default: Website Design
          object: invoice
        - status:
          is_last: true
          nonString: true
          key: status
          keyPascal: Status
          default: DRAFT
          php: XeroAPI\XeroPHP\Models\Accounting\Invoice::STATUS_DRAFT
          node: Invoice.StatusEnum.DRAFT
          ruby: XeroRuby::Accounting::Invoice::DRAFT
          python_string: DRAFT
          java: com.xero.models.accounting.Invoice.StatusEnum.DRAFT
          csharp: Invoice.StatusEnum.DRAFT
          object: invoice
        - invoices:
          is_object: true
          key: invoices
          keyPascal: Invoices
        - add_invoice:
          is_last: true
          is_array_add: true
          key: invoices
          keyPascal: Invoices
          java: Invoices
          csharp: Invoice
          object: invoice
      parameters:
        - $ref: '#/components/parameters/summarizeErrors'
        - $ref: '#/components/parameters/unitdp'
      responses:
        '200':
          description: Success returns a response of type Invoices array with newly created invoices.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoices'
              example: '{
                          "Id": "ccece84a-075c-4fcd-9073-149d4f7a91cf",
                          "Status": "OK",
                          "ProviderName": "Provider Name Example",
                          "DateTimeUTC": "\/Date(1552327126164)\/",
                          "Invoices": [
                            {
                              "Type": "ACCREC",
                              "InvoiceID": "ed255415-e141-4150-aab7-89c3bbbb851c",
                              "InvoiceNumber": "INV-0007",
                              "Reference": "Website Design",
                              "Prepayments": [],
                              "Overpayments": [],
                              "AmountDue": 40.00,
                              "AmountPaid": 0.00,
                              "SentToContact": false,
                              "CurrencyRate": 1.000000,
                              "HasErrors": false,
                              "IsDiscounted": false,
                              "Contact": {
                                "ContactID": "430fa14a-f945-44d3-9f97-5df5e28441b8",
                                "ContactStatus": "ACTIVE",
                                "Name": "Liam Gallagher",
                                "FirstName": "Liam",
                                "LastName": "Gallagher",
                                "EmailAddress": "liam@rockstar.com",
                                "BankAccountDetails": "",
                                "Addresses": [
                                  {
                                    "AddressType": "STREET",
                                    "City": "",
                                    "Region": "",
                                    "PostalCode": "",
                                    "Country": "",
                                    "AttentionTo": ""
                                  },
                                  {
                                    "AddressType": "POBOX",
                                    "City": "Anytown",
                                    "Region": "NY",
                                    "PostalCode": "10101",
                                    "Country": "USA",
                                    "AttentionTo": ""
                                  }
                                ],
                                "Phones": [
                                  {
                                    "PhoneType": "DEFAULT",
                                    "PhoneNumber": "222-2222",
                                    "PhoneAreaCode": "212",
                                    "PhoneCountryCode": ""
                                  },
                                  {
                                    "PhoneType": "DDI",
                                    "PhoneNumber": "",
                                    "PhoneAreaCode": "",
                                    "PhoneCountryCode": ""
                                  },
                                  {
                                    "PhoneType": "FAX",
                                    "PhoneNumber": "333-2233",
                                    "PhoneAreaCode": "212",
                                    "PhoneCountryCode": ""
                                  },
                                  {
                                    "PhoneType": "MOBILE",
                                    "PhoneNumber": "444-3433",
                                    "PhoneAreaCode": "212",
                                    "PhoneCountryCode": ""
                                  }
                                ],
                                "UpdatedDateUTC": "\/Date(1551747281053+0000)\/",
                                "ContactGroups": [
                                  {
                                    "ContactGroupID": "17b44ed7-4389-4162-91cb-3dd5766e4e22",
                                    "Name": "Oasis",
                                    "Status": "ACTIVE",
                                    "Contacts": [],
                                    "HasValidationErrors": false
                                  }
                                ],
                                "IsSupplier": true,
                                "IsCustomer": true,
                                "SalesTrackingCategories": [],
                                "PurchasesTrackingCategories": [],
                                "ContactPersons": [
                                  {
                                    "FirstName": "Debbie",
                                    "LastName": "Gwyther",
                                    "EmailAddress": "debbie@rockstar.com",
                                    "IncludeInEmails": false
                                  }
                                ],
                                "HasValidationErrors": false
                              },
                              "DateString": "2019-03-11T00:00:00",
                              "Date": "\/Date(1552262400000+0000)\/",
                              "DueDateString": "2018-12-10T00:00:00",
                              "DueDate": "\/Date(1544400000000+0000)\/",
                              "Status": "AUTHORISED",
                              "LineAmountTypes": "Exclusive",
                              "LineItems": [
                                {
                                  "Description": "Acme Tires",
                                  "UnitAmount": 20.00,
                                  "TaxType": "NONE",
                                  "TaxAmount": 0.00,
                                  "LineAmount": 40.00,
                                  "AccountCode": "200",
                                  "Tracking": [],
                                  "Quantity": 2.0000,
                                  "LineItemID": "5f7a612b-fdcc-4d33-90fa-a9f6bc6db32f",
                                  "ValidationErrors": []
                                }
                              ],
                              "SubTotal": 40.00,
                              "TotalTax": 0.00,
                              "Total": 40.00,
                              "UpdatedDateUTC": "\/Date(1552327126117+0000)\/",
                              "CurrencyCode": "NZD",
                              "StatusAttributeString": "OK"
                            }
                          ]
                        }'
        '400':
          $ref: '#/components/responses/400Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invoices'
            example: '{
                          "Invoices": [
                            {
                              "Type": "ACCREC",
                              "Contact": {
                                "ContactID": "430fa14a-f945-44d3-9f97-5df5e28441b8"
                              },
                              "LineItems": [
                                {
                                  "Description": "Acme Tires",
                                  "Quantity": 2,
                                  "UnitAmount": 20,
                                  "AccountCode": "200",
                                  "TaxType": "NONE",
                                  "LineAmount": 40
                                }
                              ],
                              "Date": "2019-03-11",
                              "DueDate": "2018-12-10",
                              "Reference": "Website Design",
                              "Status": "AUTHORISED"
                            }
                          ]
                        }'
    get:
      security:
        - OAuth2: [ accounting.settings.read ]
      tags:
        - Accounting
      operationId: getInvoices
      summary: Get Invoices
      description: 'Retrieves all invoices for a Xero organisation.'
      parameters:
        - $ref: '#/components/parameters/ifModifiedSince'
        - in: query
          name: where
          description: Filter by an element.
          example: InvoiceStatus==&quot;ACCREC&quot;
          x-example-csharp: InvoiceStatus==\&quot;ACTIVE\&quot;
          x-example-java: InvoiceStatus==&quot;&apos; + Invoice.InvoiceStatusEnum.ACCREC + &apos;&quot;
          x-example-php: InvoiceStatus==&quot;&apos; . \XeroAPI\XeroPHP\Models\Accounting\Invoice::INVOICE_STATUS_ACCREC . &apos;&quot;
          x-example-ruby: InvoiceStatus==#{XeroRuby::Accounting::Invoice::ACCREC}
          schema:
            type: string
        - in: query
          name: order
          description: Order by an element.
          example: "Name ASC"
          schema:
            type: string
        - in: query
          name: IDs
          x-snake: ids
          description: Filter by a comma-separated list of contact IDs, which enables you to retrieve a specific set of contacts in a single call.
          style: form
          explode: false
          example: '&quot;00000000-0000-0000-0000-000000000000&quot;'
          x-example-java: Arrays.asList(UUID.fromString("00000000-0000-0000-0000-000000000000"))
          x-example-php: '&quot;00000000-0000-0000-0000-000000000000&quot;'
          x-example-csharp: new List&lt;Guid&gt;{Guid.Parse("00000000-0000-0000-0000-000000000000")};
          schema:
            type: array
            items:
              type: string
              format: uuid
        - in: query
          name: page
          description: For example, page=1. Up to 100 contacts will be returned in a single API call.
          example: 1
          schema:
            type: integer
      responses:
        '200':
          description: Success returns a response of type Invoices array with 0 to N contacts.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoices'
              example: '{
                              "Type": "ACCREC",
                              "InvoiceID": "8ddb68bd-a697-42d5-a3c3-d9a6d7a72265",
                              "InvoiceNumber": "INV-0006",
                              "Reference": "",
                              "Payments": [],
                              "CreditNotes": [],
                              "Prepayments": [],
                              "Overpayments": [],
                              "AmountDue": 10.10,
                              "AmountPaid": 0.00,
                              "AmountCredited": 0.00,
                              "CurrencyRate": 1.0000000000,
                              "IsDiscounted": false,
                              "HasAttachments": false,
                              "HasErrors": false,
                              "Contact": {
                                "ContactID": "0bd91813-58eb-4da2-bc8b-35d4081d4b42",
                                "ContactNumber": "c9c6e1a6-44c2-4bf1-9845-fc9aa6dd690c",
                                "Name": "a129f7a6-2c26-4959-9d0f-85f1890e4c31",
                                "Addresses": [],
                                "Phones": [],
                                "ContactGroups": [],
                                "ContactPersons": [],
                                "HasValidationErrors": false
                              },
                              "DateString": "2022-01-26T00:00:00",
                              "Date": "\/Date(1643155200000+0000)\/",
                              "DueDateString": "2022-01-28T00:00:00",
                              "DueDate": "\/Date(1643328000000+0000)\/",
                              "BrandingThemeID": "3bb58a3e-8b34-4de1-8937-e85f3ce21d89",
                              "Status": "AUTHORISED",
                              "LineAmountTypes": "Exclusive",
                              "LineItems": [],
                              "SubTotal": 10.10,
                              "TotalTax": 0.00,
                              "Total": 10.10,
                              "UpdatedDateUTC": "\/Date(1643206539880+0000)\/",
                              "CurrencyCode": "AUD"
                            }'
  /Items:
    parameters:
      - $ref: '#/components/parameters/requiredHeader'
    get:
      security:
        - OAuth2: [accounting.settings.read]
      tags:
        - Accounting
      operationId: getItems
      summary: Get Items
      description: Retrieves items.
      parameters:
        - $ref: '#/components/parameters/ifModifiedSince'
        - in: query
          name: where
          description: Filter by an element.
          example: IsSold==true
          schema:
            type: string
        - in: query
          name: order
          description: Order by an element.
          example: "Code ASC"
          schema:
            type: string
        - $ref: '#/components/parameters/unitdp'
      responses:
        '200':
          description: Success returns a response of type Items array with all items.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Items'
              example: '{
                          "Id": "8487e8d7-5fb3-4f02-b949-dec8f1e38182",
                          "Status": "OK",
                          "ProviderName": "Provider Name Example",
                          "DateTimeUTC": "\/Date(1552331874897)\/",
                          "Items": [
                            {
                              "ItemID": "c8c54d65-f3f2-452d-926e-bf450b12fb07",
                              "Code": "123",
                              "Description": "Guitars Fender Strat",
                              "UpdatedDateUTC": "\/Date(1551981476267+0000)\/",
                              "PurchaseDetails": {},
                              "SalesDetails": {
                                "UnitPrice": 5000.0000,
                                "AccountCode": "200",
                                "TaxType": "OUTPUT2"
                              },
                              "Name": "Guitars",
                              "IsTrackedAsInventory": false,
                              "IsSold": true,
                              "IsPurchased": false
                            },
                            {
                              "ItemID": "a4544d51-48f6-441f-a623-99ecbced6ab7",
                              "Code": "abc65591",
                              "Description": "Barfoo",
                              "UpdatedDateUTC": "\/Date(1552331873580+0000)\/",
                              "PurchaseDetails": {},
                              "SalesDetails": {},
                              "Name": "Hello11350",
                              "IsTrackedAsInventory": false,
                              "IsSold": true,
                              "IsPurchased": true
                            }
                          ]
                        }'
    post:
      security:
        - OAuth2: [accounting.settings]
      tags:
        - Accounting
      operationId: updateOrCreateItems
      summary: Update Or Create Items
      description: Updates or creates one or more items.
      x-hasAccountingValidationError: true
      x-example:
        - item:
          is_object: true
          key: item
          keyPascal: Item
        - code:
          key: code
          keyPascal: Code
          default: abcXYZ123
          object: item
        - name:
          key: name
          keyPascal: Name
          default: HelloWorld
          object: item
        - description:
          is_last: true
          key: description
          keyPascal: Description
          default: Foobar
          object: item
        - items:
          is_object: true
          key: items
          keyPascal: Items
        - add_item:
          is_last: true
          is_array_add: true
          key: items
          keyPascal: Items
          java: Items
          csharp: Item
          object: item
      parameters:
        - $ref: '#/components/parameters/summarizeErrors'
        - $ref: '#/components/parameters/unitdp'
      responses:
        '200':
          description: Success returns a response of type Items array with newly created items.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Items'
              example: '{
                          "Id": "ae7ef7c8-9024-4d42-8d59-5f26ed3f508b",
                          "Status": "OK",
                          "ProviderName": "Provider Name Example",
                          "DateTimeUTC": "\/Date(1552331871904)\/",
                          "Items": [
                            {
                              "ItemID": "a4544d51-48f6-441f-a623-99ecbced6ab7",
                              "Code": "abc65591",
                              "Description": "foobar",
                              "UpdatedDateUTC": "\/Date(1552331871707)\/",
                              "PurchaseDetails": {},
                              "SalesDetails": {},
                              "Name": "Hello11350",
                              "IsTrackedAsInventory": false,
                              "IsSold": true,
                              "IsPurchased": true,
                              "ValidationErrors": [
                                {
                                  "Message": "Price List Item with Code ''abc'' already exists"
                                }
                              ]
                            }
                          ]
                        }'
        '400':
          $ref: '#/components/responses/400Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Items'
            example: '{
                        "Items": [
                          {
                            "Code": "ItemCode123",
                            "Name": "ItemName XYZ",
                            "Description": "Item Description ABC"
                          }
                        ]
                      }'
  /Payments:
    parameters:
      - $ref: '#/components/parameters/requiredHeader'
    get:
      security:
        - OAuth2: [accounting.transactions.read]
      tags:
        - Accounting
      operationId: getPayments
      summary: Get Payments
      description: Retrieves payments for invoices and credit notes.
      parameters:
        - $ref: '#/components/parameters/ifModifiedSince'
        - in: query
          name: where
          description: Filter by an element.
          example: Status=="AUTHORISED"
          x-example-csharp: Status==\"AUTHORISED\"
          x-example-java: Status==&quot;&apos; + Payment.StatusEnum.AUTHORISED + &apos;&quot;
          x-example-php: Status==&quot;&apos; . \XeroAPI\XeroPHP\Models\Accounting\Payment::STATUS_AUTHORISED . &apos;&quot;
          x-example-ruby: Status==#{XeroRuby::Accounting::Payment::AUTHORISED}
          schema:
            type: string
        - in: query
          name: order
          description: Order by an element.
          example: "Amount ASC"
          schema:
            type: string
        - in: query
          name: page
          description: Up to 100 payments will be returned in a single API call.
          example: 1
          schema:
            type: integer
      responses:
        '200':
          description: Success returns a response of type Payments array for all payments.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payments'
              example: '{
                          "Id": "9f310473-e1b5-4704-a25c-eec653deb596",
                          "Status": "OK",
                          "ProviderName": "Provider Name Example",
                          "DateTimeUTC": "\/Date(1552431874205)\/",
                          "Payments": [
                            {
                              "PaymentID": "99ea7f6b-c513-4066-bc27-b7c65dcd76c2",
                              "BatchPaymentID": "b54aa50c-794c-461b-89d1-846e1b84d9c0",
                              "BatchPayment": {
                                "Account": {
                                  "AccountID": "5690f1e8-1d02-4893-90c2-ee1a69eff942"
                                },
                                "BatchPaymentID": "b54aa50c-794c-461b-89d1-846e1b84d9c0",
                                "Date": "\/Date(1552521600000+0000)\/",
                                "Type": "RECBATCH",
                                "Status": "AUTHORISED",
                                "TotalAmount": "50.00",
                                "UpdatedDateUTC": "\/Date(1541176592690+0000)\/",
                                "IsReconciled": "false"
                              },
                              "Date": "\/Date(1543449600000+0000)\/",
                              "BankAmount": 46.00,
                              "Amount": 46.00,
                              "Reference": "",
                              "CurrencyRate": 1.000000,
                              "PaymentType": "ACCRECPAYMENT",
                              "Status": "AUTHORISED",
                              "UpdatedDateUTC": "\/Date(1541176592690+0000)\/",
                              "HasAccount": true,
                              "IsReconciled": false,
                              "Account": {
                                "AccountID": "5690f1e8-1d02-4893-90c2-ee1a69eff942",
                                "Code": "970"
                              },
                              "Invoice": {
                                "Type": "ACCREC",
                                "InvoiceID": "046d8a6d-1ae1-4b4d-9340-5601bdf41b87",
                                "InvoiceNumber": "INV-0002",
                                "Payments": [],
                                "CreditNotes": [],
                                "Prepayments": [],
                                "Overpayments": [],
                                "HasErrors": false,
                                "IsDiscounted": false,
                                "Contact": {
                                  "ContactID": "a3675fc4-f8dd-4f03-ba5b-f1870566bcd7",
                                  "ContactNumber": "",
                                  "Name": "Barney Rubble-83203",
                                  "Addresses": [],
                                  "Phones": [],
                                  "ContactGroups": [],
                                  "ContactPersons": [],
                                  "HasValidationErrors": false
                                },
                                "LineItems": [],
                                "CurrencyCode": "NZD"
                              },
                              "HasValidationErrors": false
                            },
                            {
                              "PaymentID": "6b037c9b-2e5d-4905-84d3-eabfb3438242",
                              "Date": "\/Date(1552521600000+0000)\/",
                              "BankAmount": 2.00,
                              "Amount": 2.00,
                              "Reference": "Too much",
                              "CurrencyRate": 1.000000,
                              "PaymentType": "ARCREDITPAYMENT",
                              "Status": "AUTHORISED",
                              "UpdatedDateUTC": "\/Date(1551812346173+0000)\/",
                              "HasAccount": true,
                              "IsReconciled": false,
                              "Account": {
                                "AccountID": "136ebd08-60ea-4592-8982-be92c153b53a",
                                "Code": "980"
                              },
                              "Invoice": {
                                "Type": "ACCRECCREDIT",
                                "InvoiceID": "249f15fa-f2a7-4acc-8769-0984103f2225",
                                "InvoiceNumber": "CN-0005",
                                "Payments": [],
                                "CreditNotes": [],
                                "Prepayments": [],
                                "Overpayments": [],
                                "HasErrors": false,
                                "IsDiscounted": false,
                                "Contact": {
                                  "ContactID": "430fa14a-f945-44d3-9f97-5df5e28441b8",
                                  "ContactNumber": "",
                                  "Name": "Liam Gallagher",
                                  "Addresses": [],
                                  "Phones": [],
                                  "ContactGroups": [],
                                  "ContactPersons": [],
                                  "HasValidationErrors": false
                                },
                                "LineItems": [],
                                "CurrencyCode": "NZD"
                              },
                              "HasValidationErrors": false
                            }
                          ]
                        }'
components:
  securitySchemes:
    OAuth2:
      type: oauth2
      description: For more information
      flows:
        authorizationCode:
          authorizationUrl: 'https://login.xero.com/identity/connect/authorize'
          tokenUrl: 'https://identity.xero.com/connect/token'
          scopes:
            email: Grant read-only access to your email
            openid: Grant read-only access to your open id
            profile: your profile information
            accounting.transactions: Grant read-write access to bank transactions, credit notes, invoices, repeating invoices
            accounting.transactions.read: Grant read-only access to invoices
            accounting.reports.read: Grant read-only access to accounting reports
            accounting.reports.tenninetynine.read: Grant read-only access to 1099 reports
            accounting.journals.read: Grant read-only access to journals
            accounting.settings: Grant read-write access to organisation and account settings
            accounting.settings.read: Grant read-only access to organisation and account settings
            accounting.contacts: Grant read-write access to contacts and contact groups
            accounting.contacts.read: Grant read-only access to contacts and contact groups
            accounting.attachments: Grant read-write access to attachments
            accounting.attachments.read: Grant read-only access to attachments
            assets: Grant read-write access to assets
            assets.read: Grant read-only access to fixed assets
            bankfeeds: Grant read-write access to bankfeeds
            files: Grant read-write access to files and folders
            files.read: Grant read-only access to files and folders
            payroll: Grant read-write access to payroll
            payroll.read: Grant read-only access to payroll
            payroll.employees: Grant read-write access to payroll employees
            payroll.employees.read: Grant read-only access to payroll employees
            payroll.leaveapplications: Grant read-write access to payroll leaveapplications
            payroll.leaveapplications.read: Grant read-only access to payroll leaveapplications
            payroll.payitems: Grant read-write access to payroll payitems
            payroll.payitems.read: Grant read-only access to payroll payitems
            payroll.payrollcalendars: Grant read-write access to payroll calendars
            payroll.payrollcalendars.read: Grant read-only access to payroll calendars
            payroll.payruns: Grant read-write access to payroll payruns
            payroll.payruns.read: Grant read-only access to payroll payruns
            payroll.payslip: Grant read-write access to payroll payslips
            payroll.payslip.read: Grant read-only access to payroll payslips
            payroll.settings.read: Grant read-only access to payroll settings
            payroll.superfunds: Grant read-write access to payroll superfunds
            payroll.superfunds.read: Grant read-only access to payroll superfunds
            payroll.superfundproducts.read: Grant read-only access to payroll superfundproducts
            payroll.timesheets: Grant read-write access to payroll timesheets
            payroll.timesheets.read: Grant read-only access to payroll timesheets
            paymentservices: Grant read-write access to payment services
            projects: Grant read-write access to projects
            projects.read: Grant read-only access to projects
  requestBodies:
    historyRecords:
      required: true
      description: HistoryRecords containing an array of HistoryRecord objects in the body of the request.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HistoryRecords'
          example: '{
                      "HistoryRecords": [
                        {
                          "Details": "Hello World"
                        }
                      ]
                    }'
  parameters:
    requiredHeader:
      in: header
      name: xero-tenant-id
      x-snake: xero_tenant_id
      description: Xero identifier for Tenant
      example: YOUR_XERO_TENANT_ID
      schema:
        type: string
      required: true
    summarizeErrors:
      in: query
      name: summarizeErrors
      x-snake: summarize_errors
      description: If false, returns 200 OK and a mix of successfully created objects as well as any with validation errors.
      example: true
      x-example-python: "True"
      schema:
        type: boolean
        default: false
    unitdp:
      in: query
      name: unitdp
      description: (Unit Decimal Places) You can opt in to use four decimal places for unit amounts.
      example: 4
      schema:
        type: integer
    ifModifiedSince:
      in: header
      name: If-Modified-Since
      x-snake: if_modified_since
      description: Only records created or modified since this timestamp will be returned.
      example: "2020-02-06T12:17:43.202-08:00"
      schema:
        type: string
        format: date-time
    includeOnline:
      in: query
      name: IncludeOnline
      x-snake: include_online
      description: Allows an attachment to be seen by the end customer within their online invoice.
      example: true
      schema:
        type: boolean
        default: false
    FromDate:
      in: query
      name: fromDate
      x-snake: from_date
      description: Filter by the from date of the report, for example 2021-02-01.
      schema:
        type: string
        format: date
    ToDate:
      in: query
      name: toDate
      x-snake: to_date
      description: Filter by the to date of the report, for example 2021-02-28.
      schema:
        type: string
        format: date
    AccountID:
      required: true
      in: path
      name: AccountID
      x-snake: account_id
      description: Unique identifier for the Account object.
      example: "00000000-0000-0000-0000-000000000000"
      schema:
        type: string
        format: uuid
    AttachmentID:
      required: true
      in: path
      name: AttachmentID
      x-snake: attachment_id
      description: Unique identifier for the Attachment object.
      example: "00000000-0000-0000-0000-000000000000"
      schema:
        type: string
        format: uuid
    ContentType:
      required: true
      in: header
      name: contentType
      x-snake: content_type
      description: The MIME type of the attachment file you are retrieving, for example image/jpg or application/pdf.
      example: image/jpg
      schema:
        type: string
    FileName:
      required: true
      in: path
      name: FileName
      x-snake: file_name
      description: Name of the attachment.
      example: "xero-dev.jpg"
      schema:
        type: string
    BatchPaymentID:
      required: true
      in: path
      name: BatchPaymentID
      x-snake: batch_payment_id
      description: Unique identifier for BatchPayment.
      example: "00000000-0000-0000-0000-000000000000"
      schema:
        type: string
        format: uuid
    BankTransactionID:
      required: true
      in: path
      name: BankTransactionID
      x-snake: bank_transaction_id
      description: Xero-generated unique identifier for a bank transaction.
      example: "00000000-0000-0000-0000-000000000000"
      schema:
        type: string
        format: uuid
    BankTransferID:
      required: true
      in: path
      name: BankTransferID
      x-snake: bank_transfer_id
      description: Xero-generated unique identifier for a bank transfer.
      example: "00000000-0000-0000-0000-000000000000"
      schema:
        type: string
        format: uuid
    BrandingThemeID:
      required: true
      in: path
      name: BrandingThemeID
      x-snake: branding_theme_id
      description: Unique identifier for a Branding Theme.
      example: "00000000-0000-0000-0000-000000000000"
      schema:
        type: string
        format: uuid
    ContactID:
      required: true
      in: path
      name: ContactID
      x-snake: contact_id
      description: Unique identifier for a Contact.
      example: "00000000-0000-0000-0000-000000000000"
      schema:
        type: string
        format: uuid
    ContactGroupID:
      required: true
      in: path
      name: ContactGroupID
      x-snake: contact_group_id
      description: Unique identifier for a Contact Group.
      example: "00000000-0000-0000-0000-000000000000"
      schema:
        type: string
        format: uuid
    CreditNoteID:
      required: true
      in: path
      name: CreditNoteID
      x-snake: credit_note_id
      description: Unique identifier for a Credit Note.
      example: "00000000-0000-0000-0000-000000000000"
      schema:
        type: string
        format: uuid
    EmployeeID:
      required: true
      in: path
      name: EmployeeID
      x-snake: employee_id
      description: Unique identifier for an Employee.
      example: "00000000-0000-0000-0000-000000000000"
      schema:
        type: string
        format: uuid
    ExpenseClaimID:
      required: true
      in: path
      name: ExpenseClaimID
      x-snake: expense_claim_id
      description: Unique identifier for an ExpenseClaim.
      example: "00000000-0000-0000-0000-000000000000"
      schema:
        type: string
        format: uuid
    InvoiceID:
      required: true
      in: path
      name: InvoiceID
      x-snake: invoice_id
      description: Unique identifier for an Invoice.
      example: "00000000-0000-0000-0000-000000000000"
      schema:
        type: string
        format: uuid
    ItemID:
      required: true
      in: path
      name: ItemID
      x-snake: item_id
      description: Unique identifier for an Item.
      example: "00000000-0000-0000-0000-000000000000"
      schema:
        type: string
        format: uuid
    JournalID:
      required: true
      in: path
      name: JournalID
      x-snake: journal_id
      description: Unique identifier for a Journal.
      example: "00000000-0000-0000-0000-000000000000"
      schema:
        type: string
        format: uuid
    LinkedTransactionID:
      required: true
      in: path
      name: LinkedTransactionID
      x-snake: linked_transaction_id
      description: Unique identifier for a LinkedTransaction.
      example: "00000000-0000-0000-0000-000000000000"
      schema:
        type: string
        format: uuid
    ManualJournalID:
      required: true
      in: path
      name: ManualJournalID
      x-snake: manual_journal_id
      description: Unique identifier for a ManualJournal.
      example: "00000000-0000-0000-0000-000000000000"
      schema:
        type: string
        format: uuid
    OrganisationID:
      required: true
      in: path
      name: OrganisationID
      x-snake: organisation_id
      description: The unique Xero identifier for an organisation.
      example: "00000000-0000-0000-0000-000000000000"
      schema:
        type: string
        format: uuid
    OverpaymentID:
      required: true
      in: path
      name: OverpaymentID
      x-snake: overpayment_id
      description: Unique identifier for an Overpayment.
      example: "00000000-0000-0000-0000-000000000000"
      schema:
        type: string
        format: uuid
    PaymentID:
      required: true
      in: path
      name: PaymentID
      x-snake: payment_id
      description: Unique identifier for a Payment.
      example: "00000000-0000-0000-0000-000000000000"
      schema:
        type: string
        format: uuid
    PrepaymentID:
      required: true
      in: path
      name: PrepaymentID
      x-snake: prepayment_id
      description: Unique identifier for a PrePayment.
      example: "00000000-0000-0000-0000-000000000000"
      schema:
        type: string
        format: uuid
    PurchaseOrderID:
      required: true
      in: path
      name: PurchaseOrderID
      x-snake: purchase_order_id
      description: Unique identifier for a Purchase Order.
      example: "00000000-0000-0000-0000-000000000000"
      schema:
        type: string
        format: uuid
    QuoteID:
      required: true
      in: path
      name: QuoteID
      x-snake: quote_id
      description: Unique identifier for a Quote.
      example: "00000000-0000-0000-0000-000000000000"
      schema:
        type: string
        format: uuid
    ReceiptID:
      required: true
      in: path
      name: ReceiptID
      x-snake: receipt_id
      description: Unique identifier for a Receipt.
      example: "00000000-0000-0000-0000-000000000000"
      schema:
        type: string
        format: uuid
    RepeatingInvoiceID:
      required: true
      in: path
      name: RepeatingInvoiceID
      x-snake: repeating_invoice_id
      description: Unique identifier for a Repeating Invoice.
      example: "00000000-0000-0000-0000-000000000000"
      schema:
        type: string
        format: uuid
    TrackingCategoryID:
      required: true
      in: path
      name: TrackingCategoryID
      x-snake: tracking_category_id
      description: Unique identifier for a TrackingCategory.
      example: "00000000-0000-0000-0000-000000000000"
      schema:
        type: string
        format: uuid
    TrackingOptionID:
      required: true
      in: path
      name: TrackingOptionID
      x-snake: tracking_option_id
      description: Unique identifier for a Tracking Option.
      example: "00000000-0000-0000-0000-000000000000"
      schema:
        type: string
        format: uuid
    UserID:
      required: true
      in: path
      name: UserID
      x-snake: user_id
      description: Unique identifier for a User.
      example: "00000000-0000-0000-0000-000000000000"
      schema:
        type: string
        format: uuid
  responses:
    400Error:
      description: A failed request due to a validation error.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    HistoryRecordCreated:
      description: Success returns a response of type HistoryRecords array of HistoryRecord objects.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HistoryRecords'
          example: '{
                      "Id": "d7525479-3392-44c0-bb37-ff4a0b5df5bd",
                      "Status": "OK",
                      "ProviderName": "Xero API Partner",
                      "DateTimeUTC": "\/Date(1550899400362)\/",
                      "HistoryRecords": [
                        {
                          "DateUTCString": "2019-02-23T05:23:20",
                          "DateUTC": "\/Date(1550899400362)\/",
                          "Details": "Hello World",
                          "ValidationErrors": []
                        }
                      ]
                    }'
    HistoryRetrieved:
      description: Success returns a response of HistoryRecords array of 0 to N HistoryRecord objects.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HistoryRecords'
          example: '{
                      "Id": "cd54cc7b-b721-4207-b11d-7d13c7902f91",
                      "Status": "OK",
                      "ProviderName": "Xero API Partner",
                      "DateTimeUTC": "\/Date(1551311321819)\/",
                      "HistoryRecords": [
                        {
                          "Changes": "Attached a file",
                          "DateUTCString": "2018-11-08T15:01:21",
                          "DateUTC": "\/Date(1541689281470+0000)\/",
                          "User": "System Generated",
                          "Details": "Attached the file sample2.jpg through the Xero API using Xero API Partner"
                        },
                        {
                          "Changes": "Credit Applied",
                          "DateUTCString": "2016-10-17T20:46:01",
                          "DateUTC": "\/Date(1476737161173+0000)\/",
                          "User": "System Generated",
                          "Details": "Bank transfer from Business Wells Fargo to My Savings on November 12, 2016 for 20.00."
                        }
                      ]
                    }'
  schemas:
    AddressForOrganisation:
      externalDocs:
        url: 'http://developer.xero.com/documentation/api/types'
      properties:
        AddressType:
          description: Defines the type of address.
          type: string
          enum:
            - POBOX
            - STREET
            - DELIVERY
        AddressLine1:
          description: max length = 500
          maxLength: 500
          type: string
        AddressLine2:
          description: max length = 500
          maxLength: 500
          type: string
        AddressLine3:
          description: max length = 500
          maxLength: 500
          type: string
        AddressLine4:
          description: max length = 500
          maxLength: 500
          type: string
        City:
          description: max length = 255
          maxLength: 255
          type: string
        Region:
          description: max length = 255
          maxLength: 255
          type: string
        PostalCode:
          description: max length = 50
          maxLength: 50
          type: string
        Country:
          description: 'max length = 50, [A-Z], [a-z] only'
          maxLength: 50
          type: string
        AttentionTo:
          description: max length = 255
          maxLength: 255
          type: string
      type: object
    Address:
      externalDocs:
        url: 'http://developer.xero.com/documentation/api/types'
      properties:
        AddressType:
          description: Defines the type of address.
          type: string
          enum:
            - POBOX
            - STREET
        AddressLine1:
          description: max length = 500
          maxLength: 500
          type: string
        AddressLine2:
          description: max length = 500
          maxLength: 500
          type: string
        AddressLine3:
          description: max length = 500
          maxLength: 500
          type: string
        AddressLine4:
          description: max length = 500
          maxLength: 500
          type: string
        City:
          description: max length = 255
          maxLength: 255
          type: string
        Region:
          description: max length = 255
          maxLength: 255
          type: string
        PostalCode:
          description: max length = 50
          maxLength: 50
          type: string
        Country:
          description: 'max length = 50, [A-Z], [a-z] only'
          maxLength: 50
          type: string
        AttentionTo:
          description: max length = 255
          maxLength: 255
          type: string
      type: object
    Phone:
      externalDocs:
        url: 'http://developer.xero.com/documentation/api/types'
      properties:
        PhoneType:
          type: string
          enum:
            - DEFAULT
            - DDI
            - MOBILE
            - FAX
            - OFFICE
        PhoneNumber:
          description: max length = 50
          maxLength: 50
          type: string
        PhoneAreaCode:
          description: max length = 10
          maxLength: 10
          type: string
        PhoneCountryCode:
          description: max length = 20
          maxLength: 20
          type: string
      type: object
    Accounts:
      type: object
      x-isObjectArray: true
      properties:
        Accounts:
          type: array
          items:
            $ref: '#/components/schemas/Account'
    Account:
      type: object
      externalDocs:
        url: 'http://developer.xero.com/documentation/api/accounts/'
      properties:
        Code:
          description:
            Customer-defined alphanumeric account code, for example 200 or SALES (max
            length = 10).
          type: string
          example: 4400
        Name:
          description: Name of account (max length = 150).
          maxLength: 150
          type: string
          example: Food Sales
        AccountID:
          description: The Xero identifier for an account, specified as a string following the endpoint name, for example /297c2dc5-cc47-4afd-8ec8-74990b8761e9.
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        Type:
          $ref: '#/components/schemas/AccountType'
          type: string
        BankAccountNumber:
          description: For bank accounts only (Account Type BANK).
          type: string
        Status:
          description:
            Accounts with a status of ACTIVE can be updated to ARCHIVED. See
            Account Status Codes.
          type: string
          enum:
            - ACTIVE
            - ARCHIVED
            - DELETED
        Description:
          description: Description of the Account. Valid for all types of accounts except bank accounts (max length = 4000).
          type: string
        BankAccountType:
          description: For bank accounts only. See Bank Account types.
          type: string
          enum:
            - BANK
            - CREDITCARD
            - PAYPAL
            - NONE
            - ''
        CurrencyCode:
          $ref: '#/components/schemas/CurrencyCode'
          type: string
        TaxType:
          description: The tax type from TaxRates.
          type: string
        EnablePaymentsToAccount:
          description: Boolean that determines whether an account can have payments applied to it.
          type: boolean
        ShowInExpenseClaims:
          description: Boolean that determines whether an account code is available for use with
            expense claims.
          type: boolean
        Class:
          description: See Account Class Types
          readOnly: true
          type: string
          enum:
            - ASSET
            - EQUITY
            - EXPENSE
            - LIABILITY
            - REVENUE
        SystemAccount:
          description:
            If this is a system account, then this element is returned. See
            System Account types. Non-system accounts may have this
            element set as either “” or null.
          readOnly: true
          type: string
          enum:
            - DEBTORS
            - CREDITORS
            - BANKCURRENCYGAIN
            - GST
            - GSTONIMPORTS
            - HISTORICAL
            - REALISEDCURRENCYGAIN
            - RETAINEDEARNINGS
            - ROUNDING
            - TRACKINGTRANSFERS
            - UNPAIDEXPCLM
            - UNREALISEDCURRENCYGAIN
            - WAGEPAYABLES
            - CISASSETS
            - CISASSET
            - CISLABOUR
            - CISLABOUREXPENSE
            - CISLABOURINCOME
            - CISLIABILITY
            - CISMATERIALS
            - ''
        ReportingCode:
          description: Shown if set
          type: string
        ReportingCodeName:
          description: Shown if set
          readOnly: true
          type: string
        HasAttachments:
          description: Boolean to indicate if an account has an attachment (read only).
          readOnly: true
          type: boolean
          default: "false"
          example: "false"
        UpdatedDateUTC:
          description: Last modified date UTC format.
          type: string
          x-is-msdate-time: true
          example: "/Date(1573755038314)/"
          readOnly: true
        AddToWatchlist:
          description: Boolean that determines whether the account is shown in the watchlist widget on the dashboard.
          type: boolean
        ValidationErrors:
          description: Displays an array of validation error messages from the API.
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
    AccountType:
      description: See Account Types
      type: string
      enum:
        - BANK
        - CURRENT
        - CURRLIAB
        - DEPRECIATN
        - DIRECTCOSTS
        - EQUITY
        - EXPENSE
        - FIXED
        - INVENTORY
        - LIABILITY
        - NONCURRENT
        - OTHERINCOME
        - OVERHEADS
        - PREPAYMENT
        - REVENUE
        - SALES
        - TERMLIAB
        - PAYGLIABILITY
        - PAYG
        - SUPERANNUATIONEXPENSE
        - SUPERANNUATIONLIABILITY
        - WAGESEXPENSE
    Attachments:
      type: object
      x-isObjectArray: true
      properties:
        Attachments:
          type: array
          items:
            $ref: '#/components/schemas/Attachment'
    Attachment:
      type: object
      externalDocs:
        url: 'http://developer.xero.com/documentation/api/attachments/'
      properties:
        AttachmentID:
          description: Unique ID for the file.
          type: string
          format: uuid
          example: "00000000-0000-0000-0000-000000000000"
        FileName:
          description: Name of the file.
          type: string
          example: xero-dev.jpg
        Url:
          description: URL to the file on xero.com.
          type: string
          example:  "https://api.xero.com/api.xro/2.0/Accounts/da962997-a8bd-4dff-9616-01cdc199283f/Attachments/sample5.jpg"
        MimeType:
          description: Type of file.
          type: string
          example: "image/jpg"
        ContentLength:
          description: Length of the file content.
          type: integer
        IncludeOnline:
          description: Include the file with the online invoice.
          type: boolean
    BankTransactions:
      type: object
      x-isObjectArray: true
      properties:
        BankTransactions:
          type: array
          items:
            $ref: '#/components/schemas/BankTransaction'
    BankTransaction:
      externalDocs:
        url: 'http://developer.xero.com/documentation/api/banktransactions/'
      properties:
        Type:
          description: See Bank Transaction Types.
          type: string
          enum:
            - RECEIVE
            - RECEIVE-OVERPAYMENT
            - RECEIVE-PREPAYMENT
            - SPEND
            - SPEND-OVERPAYMENT
            - SPEND-PREPAYMENT
            - RECEIVE-TRANSFER
            - SPEND-TRANSFER
        Contact:
          $ref: '#/components/schemas/Contact'
        LineItems:
          description: See LineItems.
          type: array
          items:
            $ref: '#/components/schemas/LineItem'
        BankAccount:
          $ref: '#/components/schemas/Account'
        IsReconciled:
          description: Boolean to show if a transaction is reconciled.
          type: boolean
        Date:
          description: Date of transaction – YYYY-MM-DD.
          type: string
          x-is-msdate: true
        Reference:
          description:
            Reference for the transaction. Only supported for SPEND and RECEIVE
            transactions.
          type: string
        CurrencyCode:
          $ref: '#/components/schemas/CurrencyCode'
          type: string
        CurrencyRate:
          description: Exchange rate to base currency on when money is spent or received, for example 0.7500. Only used for bank transactions in non base currency. If this
            isn’t specified for non base currency accounts, then either the
            user-defined rate (preference) or the XE.com day rate will be used.
            Setting currency is only supported on overpayments.
          type: number
          format: double
          x-is-money: true
        Url:
          description: URL link to a source document; shown as “Go to App Name”.
          type: string
        Status:
          description: See Bank Transaction Status Codes.
          type: string
          enum:
            - AUTHORISED
            - DELETED
            - VOIDED
        LineAmountTypes:
          $ref: '#/components/schemas/LineAmountTypes'
          type: string
        SubTotal:
          description: Total of the bank transaction, excluding taxes.
          type: number
          format: double
          x-is-money: true
        TotalTax:
          description: Total tax on the bank transaction.
          type: number
          format: double
          x-is-money: true
        Total:
          description: Total of the bank transaction, tax inclusive.
          type: number
          format: double
          x-is-money: true
        BankTransactionID:
          description: Xero-generated unique identifier for the bank transaction.
          type: string
          format: uuid
          example: "00000000-0000-0000-0000-000000000000"
        PrepaymentID:
          description: Xero-generated unique identifier for a Prepayment. This will be returned on BankTransactions with a Type of SPEND-PREPAYMENT or RECEIVE-PREPAYMENT.
          readOnly: true
          type: string
          format: uuid
          example: "00000000-0000-0000-0000-000000000000"
        OverpaymentID:
          description: Xero-generated unique identifier for an Overpayment. This will be returned on BankTransactions with a Type of SPEND-OVERPAYMENT or RECEIVE-OVERPAYMENT.
          readOnly: true
          type: string
          format: uuid
          example: "00000000-0000-0000-0000-000000000000"
        UpdatedDateUTC:
          description: Last modified date in UTC format.
          type: string
          x-is-msdate-time: true
          example: "/Date(1573755038314)/"
          readOnly: true
        HasAttachments:
          description: Boolean to indicate if a bank transaction has an attachment.
          readOnly: true
          type: boolean
          default: "false"
          example: "false"
        StatusAttributeString:
          description: A string to indicate an invoice status.
          type: string
        ValidationErrors:
          description: Displays an array of validation error messages from the API.
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
      required:
        - Type
        - LineItems
        - BankAccount
      type: object
    LineAmountTypes:
      description: Line amounts are exclusive of tax by default if you don’t specify this element. See Line Amount Types.
      type: string
      enum:
        - Exclusive
        - Inclusive
        - NoTax
    LineItem:
      externalDocs:
        url: 'https://developer.xero.com/documentation/api/invoices#post'
      properties:
        LineItemID:
          description: LineItem unique ID
          type: string
          format: uuid
          example: "00000000-0000-0000-0000-000000000000"
        Description:
          description: Description needs to be at least 1 char long. A line item with only
            a description (for example, no unit amount or quantity) can be created by
            specifying a <Description> element that contains at least 1
            character.
          type: string
        Quantity:
          description: LineItem Quantity.
          type: number
          format: double
          x-is-money: true
        UnitAmount:
          description: LineItem Unit Amount.
          type: number
          format: double
          x-is-money: true
        ItemCode:
          description: See Items.
          type: string
        AccountCode:
          description: See Accounts.
          type: string
        TaxType:
          description: The tax type from TaxRates.
          type: string
        TaxAmount:
          description: The tax amount is auto-calculated as a percentage of the line amount (see below) based on the tax rate. This value can be overriden if
            the calculated <TaxAmount> is not correct.
          type: number
          format: double
          x-is-money: true
        LineAmount:
          description: To omit either the <Quantity> or <UnitAmount>, you can provide a LineAmount and Xero will calculate the missing amount for
            you. The line amount reflects the discounted price if a DiscountRate
            has been used . For example, LineAmount = Quantity * Unit Amount * ((100 –
            DiscountRate)/100).
          type: number
          format: double
          x-is-money: true
        Tracking:
          description: Optional Tracking Category. See Tracking. Any LineItem can have a maximum of 2 <TrackingCategory> elements.
          type: array
          items:
            $ref: '#/components/schemas/LineItemTracking'
        DiscountRate:
          description: Percentage discount being applied to a line item (only supported on ACCREC invoices. ACC PAY invoices and credit notes in Xero do not
            support discounts.
          type: number
          format: double
          x-is-money: true
        DiscountAmount:
          description: Discount amount being applied to a line item. Only supported on ACCREC invoices. ACCPAY invoices and credit notes in Xero do not support discounts.
          type: number
          format: double
          x-is-money: true
        RepeatingInvoiceID:
          description:  The Xero identifier for a Repeating Invoice.
          example: "00000000-0000-0000-0000-000000000000"
          type: string
          format: uuid
      type: object
    LineItemTracking:
      externalDocs:
        url: 'https://developer.xero.com/documentation/api/invoices#post'
      properties:
        TrackingCategoryID:
          description: The Xero identifier for a tracking category.
          type: string
          format: uuid
          example: "00000000-0000-0000-0000-000000000000"
        TrackingOptionID:
          description: The Xero identifier for a tracking category option.
          type: string
          format: uuid
          example: "00000000-0000-0000-0000-000000000000"
        Name:
          description: The name of the tracking category.
          maxLength: 100
          type: string
          example: Region
        Option:
          description: See Tracking Options.
          type: string
          example: North
      type: object
    BankTransfers:
      type: object
      x-isObjectArray: true
      properties:
        BankTransfers:
          type: array
          items:
            $ref: '#/components/schemas/BankTransfer'
    BankTransfer:
      externalDocs:
        url: 'http://developer.xero.com/documentation/api/bank-transfers/'
      properties:
        FromBankAccount:
          $ref: '#/components/schemas/Account'
        ToBankAccount:
          $ref: '#/components/schemas/Account'
        Amount:
          description: Amount of the transaction.
          type: number
          format: double
          x-is-money: true
        Date:
          description: Date of the Transfer in the format YYYY-MM-DD.
          type: string
          x-is-msdate: true
        BankTransferID:
          description: The identifier of the Bank Transfer.
          readOnly: true
          type: string
          format: uuid
        CurrencyRate:
          description: The currency rate.
          readOnly: true
          type: number
          format: double
          x-is-money: true
        FromBankTransactionID:
          description: The Bank Transaction ID for the source account.
          readOnly: true
          type: string
          format: uuid
        ToBankTransactionID:
          description: The Bank Transaction ID for the destination account.
          readOnly: true
          type: string
          format: uuid
        HasAttachments:
          description: Boolean to indicate if a Bank Transfer has an attachment.
          readOnly: true
          type: boolean
          default: "false"
          example: "false"
        CreatedDateUTC:
          description: UTC timestamp of the creation date of a bank transfer.
          type: string
          x-is-msdate-time: true
          example: "/Date(1573755038314)/"
          readOnly: true
        ValidationErrors:
          description: Displays an array of validation error messages from the API.
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
      required:
        - FromBankAccount
        - ToBankAccount
        - Amount
      type: object
    BatchPayments:
      type: object
      x-isObjectArray: true
      properties:
        BatchPayments:
          type: array
          items:
            $ref: '#/components/schemas/BatchPayment'
    BatchPayment:
      externalDocs:
        url: 'http://developer.xero.com/documentation/api/BatchPayments/'
      properties:
        Account:
          $ref: '#/components/schemas/Account'
        Reference:
          description: (NZ Only) Optional references for the batch payment transaction that are shown with the batch payment transaction in the bank reconciliation Find & Match screen. Depending on your individual bank, the details might also show on the bank statement you import into Xero.
          type: string
          maxLength: 255
        Particulars:
          description: (NZ Only) Optional references for the batch payment transaction that are shown with the batch payment transaction in the bank reconciliation Find & Match screen. Depending on your individual bank, the details might also show on the bank statement you import into Xero.
          type: string
          maxLength: 12
        Code:
          description: (NZ Only) Optional references for the batch payment transaction that are shown with the batch payment transaction in the bank reconciliation Find & Match screen. Depending on your individual bank, the details might also show on the bank statement you import into Xero.
          type: string
          maxLength: 12
        Details:
          description: (Non-NZ Only) These details are sent to the org’s bank as a reference for the batch payment transaction and are shown with the batch payment transaction in the bank reconciliation Find & Match screen. Depending on your individual bank, the details might also show on the bank statement imported into Xero. Maximum field length = 18.
          type: string
        Narrative:
          description: (UK Only) Only shows on the statement line in Xero. Max length =18.
          type: string
          maxLength: 18
        BatchPaymentID:
          description: The Xero-generated unique identifier for the bank transaction (read-only).
          readOnly: true
          type: string
          format: uuid
        DateString:
          description: Date the payment is being made (YYYY-MM-DD), for example 2009-09-06.
          type: string
        Date:
          description: Date the payment is being made (YYYY-MM-DD), for example 2009-09-06.
          type: string
          x-is-msdate: true
        Amount:
          description: The amount of the payment. Must be less than or equal to the
            outstanding amount owed on the invoice, for example 200.00.
          type: number
          format: double
          x-is-money: true
        Payments:
          description: An array of payments.
          type: array
          items:
            $ref: '#/components/schemas/Payment'
        Type:
          description: PAYBATCH for bill payments or RECBATCH for sales invoice payments (read-only).
          readOnly: true
          type: string
          enum:
            - PAYBATCH
            - RECBATCH
        Status:
          description: AUTHORISED or DELETED (read-only). New batch payments will have a status of AUTHORISED. It is not possible to delete batch payments via the API.
          readOnly: true
          type: string
          enum:
            - AUTHORISED
            - DELETED
        TotalAmount:
          description: The total of the payments that make up the batch (read-only).
          readOnly: true
          type: string
        UpdatedDateUTC:
          description: UTC timestamp of the last update to the payment.
          type: string
          x-is-msdate-time: true
          example: "/Date(1573755038314)/"
          readOnly: true
        IsReconciled:
          description: Booelan that tells you if the batch payment has been reconciled (read-only).
          readOnly: true
          type: string
        ValidationErrors:
          description: Displays an array of validation error messages from the API.
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
      type: object
    BatchPaymentDetails:
      description: Bank details for use on a batch payment stored with each contact.
      externalDocs:
        url: 'http://developer.xero.com/documentation/api/Contact/'
      properties:
        BankAccountNumber:
          description: Bank account number for use with Batch Payments.
          type: string
          example: 123-456-1111111
        BankAccountName:
          description: Name of bank for use with Batch Payments.
          type: string
          example: "ACME Bank"
        Details:
          description: (Non-NZ Only) These details are sent to the org’s bank as a reference for the batch payment transaction and are shown with the batch payment transaction in the bank reconciliation Find & Match screen. Depending on your individual bank, the details might also show on the bank statement imported into Xero. Maximum field length = 18.
          type: string
          example: Hello World
        Code:
          description: (NZ Only) Optional references for the batch payment transaction that are also shown with the batch payment transaction in the bank reconciliation Find & Match screen. Depending on your individual bank, the details might also show on the bank statement you import into Xero.
          type: string
          maxLength: 12
          example: "ABC"
        Reference:
          description: (NZ Only) Optional references for the batch payment transaction that are also shown with the batch payment transaction in the bank reconciliation Find & Match screen. Depending on your individual bank, the details might also show on the bank statement you import into Xero.
          type: string
          maxLength: 12
          example: "Foobar"
    BrandingThemes:
      type: object
      x-isObjectArray: true
      properties:
        BrandingThemes:
          type: array
          items:
            $ref: '#/components/schemas/BrandingTheme'
    BrandingTheme:
      externalDocs:
        url: 'http://developer.xero.com/documentation/api/branding-themes/'
      properties:
        BrandingThemeID:
          description: Xero identifier.
          type: string
          format: uuid
        Name:
          description: Name of branding theme.
          type: string
        LogoUrl:
          description: The location of the image file used as the logo on this branding theme.
          type: string
        Type:
          description: Always INVOICE
          type: string
          enum:
            - INVOICE
        SortOrder:
          description: Integer. Ranked order of the branding theme. The default branding theme has a value of 0.
          type: integer
        CreatedDateUTC:
          description: UTC timestamp of the creation date of the branding theme.
          type: string
          x-is-msdate-time: true
          example: "/Date(1573755038314)/"
          readOnly: true
      type: object
    PaymentServices:
      type: object
      x-isObjectArray: true
      properties:
        PaymentServices:
          type: array
          items:
            $ref: '#/components/schemas/PaymentService'
    PaymentService:
      externalDocs:
        url: 'http://developer.xero.com/documentation/api/branding-themes/'
      properties:
        PaymentServiceID:
          description: Xero identifier.
          type: string
          format: uuid
        PaymentServiceName:
          description: Name of the payment service.
          type: string
        PaymentServiceUrl:
          description: The custom payment URL.
          type: string
        PayNowText:
          description: Text displayed on the Pay Now button in Xero Online Invoicing. If this is not set, it defaults to Pay by credit card.
          type: string
        PaymentServiceType:
          description: This will always be CUSTOM for payment services created via the API.
          type: string
        ValidationErrors:
          description: Displays an array of validation error messages from the API.
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
    Contacts:
      type: object
      x-isObjectArray: true
      properties:
        Contacts:
          type: array
          items:
            $ref: '#/components/schemas/Contact'
    Contact:
      externalDocs:
        url: 'http://developer.xero.com/documentation/api/contacts/'
      properties:
        ContactID:
          description: Xero identifier
          type: string
          format: uuid
        ContactNumber:
          description: This can be updated via the API only. This field is read only on the Xero contact screen, used to identify contacts in external
            systems (max length = 50). If the Contact Number is used, this is
            displayed as Contact Code in the Contacts UI in Xero.
          maxLength: 50
          type: string
        AccountNumber:
          description: A user-defined account number. This can be updated via the API and
            the Xero UI (max length = 50).
          maxLength: 50
          type: string
        ContactStatus:
          description: Current status of a contact. See Contact Status Types.
          type: string
          enum:
            - ACTIVE
            - ARCHIVED
            - GDPRREQUEST
        Name:
          description: Full name of contact or organisation (max length = 255).
          maxLength: 255
          type: string
        FirstName:
          description: First name of contact person (max length = 255).
          maxLength: 255
          type: string
        LastName:
          description: Last name of contact person (max length = 255).
          maxLength: 255
          type: string
        EmailAddress:
          description: Email address of contact person (umlauts not supported). Max length = 255.
          maxLength: 255
          type: string
        SkypeUserName:
          description: Skype user name of contact.
          type: string
        ContactPersons:
          description: See contact persons.
          type: array
          items:
            $ref: '#/components/schemas/ContactPerson'
        BankAccountDetails:
          description: Bank account number of contact.
          type: string
        TaxNumber:
          description: Tax number of contact. This is also known as the ABN (Australia),
            GST Number (New Zealand), VAT Number (UK) or Tax ID Number (US and
            global) in the Xero UI, depending on which regionalized version of
            Xero you are using. Max length = 50.
          maxLength: 50
          type: string
        AccountsReceivableTaxType:
          description: The tax type from TaxRates.
          type: string
        AccountsPayableTaxType:
          description: The tax type from TaxRates.
          type: string
        Addresses:
          description: Store certain address types for a contact. See Address Types.
          type: array
          items:
            $ref: '#/components/schemas/Address'
        Phones:
          description: Store certain phone types for a contact. See Phone Types.
          type: array
          items:
            $ref: '#/components/schemas/Phone'
        IsSupplier:
          description: Boolean that determines if a contact has any AP invoices entered against them. Cannot be set via PUT or POST; it is
            automatically set when an accounts payable invoice is generated
            against this contact.
          type: boolean
        IsCustomer:
          description: Boolean that determines if a contact has any AR
            invoices entered against them. Cannot be set via PUT or POST; it is
            automatically set when an accounts receivable invoice is generated
            against this contact.
          type: boolean
        DefaultCurrency:
          $ref: '#/components/schemas/CurrencyCode'
          type: string
        XeroNetworkKey:
          description: Store XeroNetworkKey for contacts.
          type: string
        SalesDefaultAccountCode:
          description: The default sales account code for contacts.
          type: string
        PurchasesDefaultAccountCode:
          description: The default purchases account code for contacts.
          type: string
        SalesTrackingCategories:
          description: The default sales tracking categories for contacts.
          type: array
          items:
            $ref: '#/components/schemas/SalesTrackingCategory'
        PurchasesTrackingCategories:
          description: The default purchases tracking categories for contacts.
          type: array
          items:
            $ref: '#/components/schemas/SalesTrackingCategory'
        TrackingCategoryName:
          description: The name of the Tracking Category assigned to the contact under
            SalesTrackingCategories and PurchasesTrackingCategories.
          type: string
        TrackingCategoryOption:
          description: The name of the Tracking Option assigned to the contact under
            SalesTrackingCategories and PurchasesTrackingCategories.
          type: string
        PaymentTerms:
          $ref: '#/components/schemas/PaymentTerm'
        UpdatedDateUTC:
          description: UTC timestamp of the last update to the contact.
          type: string
          x-is-msdate-time: true
          example: "/Date(1573755038314)/"
          readOnly: true
        ContactGroups:
          description: Displays which contact groups a contact is included in.
          type: array
          items:
            $ref: '#/components/schemas/ContactGroup'
        Website:
          description: Website address for contact (read only).
          readOnly: true
          type: string
        BrandingTheme:
          $ref: '#/components/schemas/BrandingTheme'
        BatchPayments:
          $ref: '#/components/schemas/BatchPaymentDetails'
        Discount:
          description: The default discount rate for the contact (read only).
          readOnly: true
          type: number
          format: double
          x-is-money: true
        Balances:
          $ref: '#/components/schemas/Balances'
        Attachments:
          description: Displays array of attachments from the API.
          type: array
          items:
            $ref: '#/components/schemas/Attachment'
        HasAttachments:
          description: A boolean to indicate if a contact has an attachment.
          type: boolean
          default: "false"
          example: "false"
        ValidationErrors:
          description: Displays validation errors returned from the API.
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
        HasValidationErrors:
          description: A boolean to indicate if a contact has an validation errors.
          type: boolean
          default: "false"
          example: "false"
        StatusAttributeString:
          description: Status of object
          type: string
      type: object
    Balances:
      type: object
      description:  The raw AccountsReceivable (sales invoices) and
        AccountsPayable (bills) outstanding and overdue amounts, not
        converted to base currency (read only).
      properties:
        AccountsReceivable:
          $ref: '#/components/schemas/AccountsReceivable'
        AccountsPayable:
          $ref: '#/components/schemas/AccountsPayable'
    AccountsReceivable:
      type: object
      properties:
        Outstanding:
          type: number
          format: double
          x-is-money: true
        Overdue:
          type: number
          format: double
          x-is-money: true
    AccountsPayable:
      type: object
      properties:
        Outstanding:
          type: number
          format: double
          x-is-money: true
        Overdue:
          type: number
          format: double
          x-is-money: true
    CISSettings:
      type: object
      x-isObjectArray: true
      properties:
        CISSettings:
          type: array
          items:
            $ref: '#/components/schemas/CISSetting'
    CISSetting:
      externalDocs:
        url: 'http://developer.xero.com/documentation/api/contacts/'
      properties:
        CISEnabled:
          description: Boolean that describes if the contact is a CIS subcontractor.
          type: boolean
        Rate:
          description: CIS deduction rate for the contact if he is a subcontractor. If the contact is not CISEnabled, then the rate is not returned.
          type: number
          format: double
          readOnly: true
          x-is-money: true
    CISOrgSettings:
      type: object
      x-isObjectArray: true
      properties:
        CISSettings:
          type: array
          items:
            $ref: '#/components/schemas/CISOrgSetting'
    CISOrgSetting:
      externalDocs:
        url: 'https://developer.xero.com/documentation/api/organisation'
      properties:
        CISContractorEnabled:
          description: Boolean that describes if the organisation is a CIS contractor.
          type: boolean
        CISSubContractorEnabled:
          description: Boolean that describes if the organisation is a CIS subcontractor.
          type: boolean
        Rate:
          description: CIS deduction rate for the organisation.
          type: number
          format: double
          readOnly: true
          x-is-money: true
    ContactPerson:
      externalDocs:
        url: 'http://developer.xero.com/documentation/api/contacts/'
      properties:
        FirstName:
          description: First name of the person.
          type: string
        LastName:
          description: Last name of the person.
          type: string
        EmailAddress:
          description: Email address of the person.
          type: string
        IncludeInEmails:
          description: Boolean to indicate whether to include a contact on emails
            with invoices and so on.
          type: boolean
      type: object
    ContactGroups:
      type: object
      x-isObjectArray: true
      properties:
        ContactGroups:
          type: array
          items:
            $ref: '#/components/schemas/ContactGroup'
    ContactGroup:
      externalDocs:
        url: 'http://developer.xero.com/documentation/api/contactgroups/'
      properties:
        Name:
          description: Name of the contact group. Required when creating a new contact  group.
          type: string
        Status:
          description: Status of a contact group. To delete a contact group, update the status to DELETED. Only contact groups with a status of ACTIVE are
            returned on GETs.
          type: string
          enum:
            - ACTIVE
            - DELETED
        ContactGroupID:
          description: The Xero identifier for a contact group, specified as a string
            following the endpoint name, for example /297c2dc5-cc47-4afd-8ec8-74990b8761e9
          type: string
          format: uuid
        Contacts:
          description: The ContactID and Name of Contacts in a contact group. Returned on
            GETs when the ContactGroupID is supplied in the URL.
          type: array
          items:
            $ref: '#/components/schemas/Contact'
      type: object
    RequestEmpty:
      externalDocs:
        url: 'http://developer.xero.com/documentation/api/invoice/'
      properties:
        Status:
          description: Needs at least one field to create an empty JSON payload.
          type: string
      type: object
    CreditNotes:
      type: object
      x-isObjectArray: true
      properties:
        CreditNotes:
          type: array
          items:
            $ref: '#/components/schemas/CreditNote'
    CreditNote:
      externalDocs:
        url: 'http://developer.xero.com/documentation/api/credit-notes/'
      properties:
        Type:
          description: See Credit Note Types.
          type: string
          enum:
            - ACCPAYCREDIT
            - ACCRECCREDIT
        Contact:
          $ref: '#/components/schemas/Contact'
        Date:
          description: The date the credit note is issued on, in the format YYYY-MM-DD. If the Date element is not specified, it defaults to the current date based on
            the timezone setting of the organisation.
          type: string
          x-is-msdate: true
        DueDate:
          description: Date an invoice is due in the format YYYY-MM-DD.
          type: string
          x-is-msdate: true
        Status:
          description: See Credit Note Status Codes.
          type: string
          enum:
            - DRAFT
            - SUBMITTED
            - DELETED
            - AUTHORISED
            - PAID
            - VOIDED
        LineAmountTypes:
          $ref: '#/components/schemas/LineAmountTypes'
          type: string
        LineItems:
          description: See Invoice Line Items.
          type: array
          items:
            $ref: '#/components/schemas/LineItem'
        SubTotal:
          description: The subtotal of the credit note, excluding taxes.
          type: number
          format: double
          x-is-money: true
        TotalTax:
          description: The total tax on the credit note.
          type: number
          format: double
          x-is-money: true
        Total:
          description: The total of the Credit Note (subtotal + total tax).
          type: number
          format: double
          x-is-money: true
        CISDeduction:
          description: CIS deduction for UK contractors.
          readOnly: true
          type: number
          format: double
          x-is-money: true
        CISRate:
          description: CIS Deduction rate for the organisation.
          type: number
          format: double
          readOnly: true
          x-is-money: true
        UpdatedDateUTC:
          description: UTC timestamp of the last update to the credit note.
          type: string
          x-is-msdate-time: true
          example: "/Date(1573755038314)/"
          readOnly: true
        CurrencyCode:
          description: The specified currency code.
          $ref: '#/components/schemas/CurrencyCode'
          type: string
        FullyPaidOnDate:
          description: Date when the credit note was fully paid in UTC format.
          type: string
          x-is-msdate: true
        CreditNoteID:
          description: Xero-generated unique identifier.
          type: string
          format: uuid
        CreditNoteNumber:
          description: ACCRECCREDIT. Unique alphanumeric code identifying the credit note
            (when missing, it is auto-generated from your Organisation Invoice
            Settings).
          type: string
        Reference:
          description: ACCRECCREDIT only. An additional reference number.
          type: string
        SentToContact:
          description: Boolean to indicate if a credit note has been sent to a contact via the Xero app (currently read only).
          readOnly: true
          type: boolean
        CurrencyRate:
          description: The currency rate for a multicurrency invoice. If no rate is
            specified, the XE.com day rate is used.
          type: number
          format: double
          x-is-money: true
        RemainingCredit:
          description: The remaining credit balance on the Credit Note.
          type: number
          format: double
          x-is-money: true
        Allocations:
          description: See Allocations.
          type: array
          items:
            $ref: '#/components/schemas/Allocation'
        AppliedAmount:
          description: The amount applied to an invoice.
          type: number
          format: double
          example: 2.00
          x-is-money: true
        Payments:
          description: See Payments.
          type: array
          items:
            $ref: '#/components/schemas/Payment'
        BrandingThemeID:
          description: See BrandingThemes.
          type: string
          format: uuid
        StatusAttributeString:
          description: A string to indicate an invoice's status.
          type: string
        HasAttachments:
          description: Boolean to indicate if a credit note has an attachment.
          type: boolean
          default: "false"
          example: "false"
        HasErrors:
          description: Boolean to indicate if a credit note has validation errors.
          type: boolean
          default: "false"
          example: "false"
        ValidationErrors:
          description: Displays an array of validation error messages from the API.
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
        Warnings:
          description: Displays an array of warning messages from the API.
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
      type: object
    Allocations:
      type: object
      x-isObjectArray: true
      properties:
        Allocations:
          type: array
          items:
            $ref: '#/components/schemas/Allocation'
    Allocation:
      externalDocs:
        url: 'http://developer.xero.com/documentation/api/prepayments/'
      properties:
        Invoice:
          $ref: '#/components/schemas/Invoice'
        Overpayment:
          $ref: '#/components/schemas/Overpayment'
        Prepayment:
          $ref: '#/components/schemas/Prepayment'
        CreditNote:
          $ref: '#/components/schemas/CreditNote'
        Amount:
          description: Amount to apply to the invoice.
          type: number
          format: double
          x-is-money: true
        Date:
          description: Date the allocation is applied in the format YYYY-MM-DD.
          type: string
          x-is-msdate: true
        StatusAttributeString:
          description: A string to indicate an invoice's status.
          type: string
        ValidationErrors:
          description: Displays array of validation error messages from the API
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
      required:
        - Amount
        - Invoice
        - Date
      type: object
    Currencies:
      type: object
      x-isObjectArray: true
      properties:
        Currencies:
          type: array
          items:
            $ref: '#/components/schemas/Currency'
    Currency:
      externalDocs:
        url: 'http://developer.xero.com/documentation/api/currencies/'
      properties:
        Code:
          $ref: '#/components/schemas/CurrencyCode'
          type: string
        Description:
          description: Name of Currency
          type: string
      type: object
    CurrencyCode:
      description: Three letter alpha code for the currency. See the list of currency codes.
      type: string
      x-enum-varnames:
        - AED
        - AFN
        - ALL
        - AMD
        - ANG
        - AOA
        - ARS
        - AUD
        - AWG
        - AZN
        - BAM
        - BBD
        - BDT
        - BGN
        - BHD
        - BIF
        - BMD
        - BND
        - BOB
        - BRL
        - BSD
        - BTN
        - BWP
        - BYN
        - BYR
        - BZD
        - CAD
        - CDF
        - CHF
        - CLP
        - CNY
        - COP
        - CRC
        - CUC
        - CUP
        - CVE
        - CZK
        - DJF
        - DKK
        - DOP
        - DZD
        - EGP
        - ERN
        - ETB
        - EUR
        - FJD
        - FKP
        - GBP
        - GEL
        - GGP
        - GHS
        - GIP
        - GMD
        - GNF
        - GTQ
        - GYD
        - HKD
        - HNL
        - HRK
        - HTG
        - HUF
        - IDR
        - ILS
        - IMP
        - INR
        - IQD
        - IRR
        - ISK
        - JEP
        - JMD
        - JOD
        - JPY
        - KES
        - KGS
        - KHR
        - KMF
        - KPW
        - KRW
        - KWD
        - KYD
        - KZT
        - LAK
        - LBP
        - LKR
        - LRD
        - LSL
        - LTL
        - LYD
        - MAD
        - MDL
        - MGA
        - MKD
        - MMK
        - MNT
        - MOP
        - MRU
        - MUR
        - MVR
        - MWK
        - MXN
        - MYR
        - MZN
        - NAD
        - NGN
        - NIO
        - NOK
        - NPR
        - NZD
        - OMR
        - PAB
        - PEN
        - PGK
        - PHP
        - PKR
        - PLN
        - PYG
        - QAR
        - RON
        - RSD
        - RUB
        - RWF
        - SAR
        - SBD
        - SCR
        - SDG
        - SEK
        - SGD
        - SHP
        - SLL
        - SOS
        - SPL
        - SRD
        - STN
        - SVC
        - SYP
        - SZL
        - THB
        - TJS
        - TMT
        - TND
        - TOP
        - TRY_LIRA
        - TTD
        - TVD
        - TWD
        - TZS
        - UAH
        - UGX
        - USD
        - UYU
        - UZS
        - VEF
        - VND
        - VUV
        - WST
        - XAF
        - XCD
        - XDR
        - XOF
        - XPF
        - YER
        - ZAR
        - ZMW
        - ZMK
        - ZWD
        - EMPTY_CURRENCY
      enum:
        - AED
        - AFN
        - ALL
        - AMD
        - ANG
        - AOA
        - ARS
        - AUD
        - AWG
        - AZN
        - BAM
        - BBD
        - BDT
        - BGN
        - BHD
        - BIF
        - BMD
        - BND
        - BOB
        - BRL
        - BSD
        - BTN
        - BWP
        - BYN
        - BYR
        - BZD
        - CAD
        - CDF
        - CHF
        - CLP
        - CNY
        - COP
        - CRC
        - CUC
        - CUP
        - CVE
        - CZK
        - DJF
        - DKK
        - DOP
        - DZD
        - EGP
        - ERN
        - ETB
        - EUR
        - FJD
        - FKP
        - GBP
        - GEL
        - GGP
        - GHS
        - GIP
        - GMD
        - GNF
        - GTQ
        - GYD
        - HKD
        - HNL
        - HRK
        - HTG
        - HUF
        - IDR
        - ILS
        - IMP
        - INR
        - IQD
        - IRR
        - ISK
        - JEP
        - JMD
        - JOD
        - JPY
        - KES
        - KGS
        - KHR
        - KMF
        - KPW
        - KRW
        - KWD
        - KYD
        - KZT
        - LAK
        - LBP
        - LKR
        - LRD
        - LSL
        - LTL
        - LYD
        - MAD
        - MDL
        - MGA
        - MKD
        - MMK
        - MNT
        - MOP
        - MRU
        - MUR
        - MVR
        - MWK
        - MXN
        - MYR
        - MZN
        - NAD
        - NGN
        - NIO
        - NOK
        - NPR
        - NZD
        - OMR
        - PAB
        - PEN
        - PGK
        - PHP
        - PKR
        - PLN
        - PYG
        - QAR
        - RON
        - RSD
        - RUB
        - RWF
        - SAR
        - SBD
        - SCR
        - SDG
        - SEK
        - SGD
        - SHP
        - SLL
        - SOS
        - SPL
        - SRD
        - STN
        - SVC
        - SYP
        - SZL
        - THB
        - TJS
        - TMT
        - TND
        - TOP
        - TRY
        - TTD
        - TVD
        - TWD
        - TZS
        - UAH
        - UGX
        - USD
        - UYU
        - UZS
        - VEF
        - VND
        - VUV
        - WST
        - XAF
        - XCD
        - XDR
        - XOF
        - XPF
        - YER
        - ZAR
        - ZMW
        - ZMK
        - ZWD
        - ""
    Employees:
      type: object
      x-isObjectArray: true
      properties:
        Employees:
          type: array
          items:
            $ref: '#/components/schemas/Employee'
    Employee:
      externalDocs:
        url: 'http://developer.xero.com/documentation/api/employees/'
      properties:
        EmployeeID:
          description: The Xero identifier for an employee, for example 297c2dc5-cc47-4afd-8ec8-74990b8761e9
          type: string
          format: uuid
        Status:
          description: Current status of an employee. See Contact Status Types.
          type: string
          enum:
            - ACTIVE
            - ARCHIVED
            - GDPRREQUEST
            - DELETED
        FirstName:
          description: First name of an employee (max length = 255).
          maxLength: 255
          type: string
        LastName:
          description: Last name of an employee (max length = 255).
          maxLength: 255
          type: string
        ExternalLink:
          $ref: '#/components/schemas/ExternalLink'
        UpdatedDateUTC:
          type: string
          x-is-msdate-time: true
          example: "/Date(1573755038314)/"
          readOnly: true
        StatusAttributeString:
          description: A string to indicate an invoice's status.
          type: string
          example: ERROR
        ValidationErrors:
          description: Displays an array of validation error messages from the API.
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
      type: object
    ExpenseClaims:
      type: object
      x-isObjectArray: true
      properties:
        ExpenseClaims:
          type: array
          items:
            $ref: '#/components/schemas/ExpenseClaim'
    ExpenseClaim:
      externalDocs:
        url: 'http://developer.xero.com/documentation/api/expense-claims/'
      properties:
        ExpenseClaimID:
          description: Xero-generated unique identifier for an expense claim.
          type: string
          format: uuid
        Status:
          description: Current status of an expense claim. See Status Types.
          type: string
          enum:
            - SUBMITTED
            - AUTHORISED
            - PAID
            - VOIDED
            - DELETED
        Payments:
          description: See Payments.
          type: array
          items:
            $ref: '#/components/schemas/Payment'
        User:
          $ref: '#/components/schemas/User'
        Receipts:
          type: array
          items:
            $ref: '#/components/schemas/Receipt'
        UpdatedDateUTC:
          description: Last modified date in UTC format.
          type: string
          x-is-msdate-time: true
          example: "/Date(1573755038314)/"
          readOnly: true
        Total:
          description: The total of an expense claim being paid.
          readOnly: true
          type: number
          format: double
          x-is-money: true
        AmountDue:
          description: The amount due for an expense claim.
          readOnly: true
          type: number
          format: double
          x-is-money: true
        AmountPaid:
          description: The amount that remains to be paid for an expense claim.
          readOnly: true
          type: number
          format: double
          x-is-money: true
        PaymentDueDate:
          description: The date when the expense claim is due to be paid in the format YYYY-MM-DD.
          readOnly: true
          type: string
          x-is-msdate: true
        ReportingDate:
          description: The date the expense claim will be reported in Xero in the format YYYY-MM-DD.
          readOnly: true
          type: string
          x-is-msdate: true
        ReceiptID:
          description: The Xero identifier for the Receipt, for example e59a2c7f-1306-4078-a0f3-73537afcbba9
          type: string
          format: uuid
      type: object
    HistoryRecords:
      type: object
      x-isObjectArray: true
      properties:
        HistoryRecords:
          type: array
          items:
            $ref: '#/components/schemas/HistoryRecord'
    HistoryRecord:
      externalDocs:
        url: 'https://developer.xero.com/documentation/api/history-and-notes'
      properties:
        Details:
          description: Details
          type: string
        Changes:
          description: Name of branding theme.
          type: string
        User:
          description:  Has a value of 0.
          type: string
        DateUTC:
          description: UTC timestamp of the creation date of the branding theme.
          type: string
          x-is-msdate-time: true
          example: "/Date(1573755038314)/"
          readOnly: true
      type: object
    Invoices:
      type: object
      x-isObjectArray: true
      properties:
        Invoices:
          type: array
          items:
            $ref: '#/components/schemas/Invoice'
    Invoice:
      externalDocs:
        url: 'http://developer.xero.com/documentation/api/invoices/'
      properties:
        Type:
          description: See Invoice Types.
          type: string
          enum:
            - ACCPAY
            - ACCPAYCREDIT
            - APOVERPAYMENT
            - APPREPAYMENT
            - ACCREC
            - ACCRECCREDIT
            - AROVERPAYMENT
            - ARPREPAYMENT
        Contact:
          $ref: '#/components/schemas/Contact'
        LineItems:
          description: See LineItems.
          type: array
          items:
            $ref: '#/components/schemas/LineItem'
        Date:
          description: Date the invoice was issued in the format YYYY-MM-DD. If the Date element is not
            specified, it defaults to the current date based on the timezone
            setting of the organisation.
          type: string
          x-is-msdate: true
        DueDate:
          description: Date the invoice is due in the format YYYY-MM-DD.
          type: string
          x-is-msdate: true
        LineAmountTypes:
          $ref: '#/components/schemas/LineAmountTypes'
          type: string
        InvoiceNumber:
          description: ACCREC. Unique alphanumeric code identifying an invoice. If this value is missing, it is auto-generated from your Organisation Invoice Settings. Max
            length = 255.
          maxLength: 255
          type: string
        Reference:
          description: ACCREC only. An additional reference number.
          type: string
        BrandingThemeID:
          description: See BrandingThemes
          type: string
          format: uuid
        Url:
          description: URL link to a source document; shown as “Go to [appName]” in the
            Xero app.
          type: string
        CurrencyCode:
          $ref: '#/components/schemas/CurrencyCode'
          type: string
        CurrencyRate:
          description: The currency rate for a multicurrency invoice. If no rate is
            specified, the XE.com day rate is used. Max length = 18.
          type: number
          format: double
          x-is-money: true
        Status:
          description: See Invoice Status Codes.
          type: string
          enum:
            - DRAFT
            - SUBMITTED
            - DELETED
            - AUTHORISED
            - PAID
            - VOIDED
        SentToContact:
          description: Boolean to set whether the invoice in the Xero app should be marked
            as “sent”. This can be set only on invoices that have been approved.
          type: boolean
        ExpectedPaymentDate:
          description: Shown on sales invoices (Accounts Receivable) when this is set.
          type: string
          x-is-msdate: true
        PlannedPaymentDate:
          description: Shown on bills (Accounts Payable) when this is set.
          type: string
          x-is-msdate: true
        CISDeduction:
          description: CIS deduction for UK contractors.
          readOnly: true
          type: number
          format: double
          x-is-money: true
        CISRate:
          description: CIS Deduction rate for the organisation.
          type: number
          format: double
          readOnly: true
          x-is-money: true
        SubTotal:
          description: Total of the invoice, excluding taxes.
          readOnly: true
          type: number
          format: double
          x-is-money: true
        TotalTax:
          description: Total tax on the invoice.
          readOnly: true
          type: number
          format: double
          x-is-money: true
        Total:
          description: Total of the invoice, tax inclusive (SubTotal + TotalTax). This is ignored if it doesn’t equal the sum of the LineAmounts.
          readOnly: true
          type: number
          format: double
          x-is-money: true
        TotalDiscount:
          description: Total of discounts applied on the invoice line items.
          readOnly: true
          type: number
          format: double
          x-is-money: true
        InvoiceID:
          description: Xero-generated unique identifier for invoice.
          type: string
          format: uuid
        RepeatingInvoiceID:
          description: Xero-generated unique identifier for repeating invoices.
          type: string
          format: uuid
        HasAttachments:
          description: Boolean to indicate if an invoice has an attachment.
          readOnly: true
          type: boolean
          default: "false"
          example: "false"
        IsDiscounted:
          description: Boolean to indicate if an invoice has a discount.
          readOnly: true
          type: boolean
        Payments:
          description: See Payments.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/Payment'
        Prepayments:
          description: See Prepayments.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/Prepayment'
        Overpayments:
          description: See Overpayments.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/Overpayment'
        AmountDue:
          description: Amount remaining to be paid on the invoice.
          readOnly: true
          type: number
          format: double
          x-is-money: true
        AmountPaid:
          description: Sum of payments received for the invoice.
          readOnly: true
          type: number
          format: double
          x-is-money: true
        FullyPaidOnDate:
          description: The date the invoice was fully paid. Only returned on fully paid
            invoices.
          readOnly: true
          type: string
          x-is-msdate: true
        AmountCredited:
          description: Sum of all credit notes, over-payments, and pre-payments applied to the
            invoice.
          readOnly: true
          type: number
          format: double
          x-is-money: true
        UpdatedDateUTC:
          description: Last modified date in UTC format.
          type: string
          x-is-msdate-time: true
          example: "/Date(1573755038314)/"
          readOnly: true
        CreditNotes:
          description: Details of credit notes that have been applied to an invoice.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/CreditNote'
        Attachments:
          description: Displays an array of attachments from the API.
          type: array
          items:
            $ref: '#/components/schemas/Attachment'
        HasErrors:
          description: A boolean to indicate if an invoice has any validation errors.
          type: boolean
          default: "false"
          example: "false"
        StatusAttributeString:
          description: A string to indicate an invoice's status.
          type: string
        ValidationErrors:
          description: Displays an array of validation error messages from the API.
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
        Warnings:
          description: Displays an array of warning messages from the API.
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
      type: object
    OnlineInvoices:
      type: object
      x-isObjectArray: true
      properties:
        OnlineInvoices:
          type: array
          items:
            $ref: '#/components/schemas/OnlineInvoice'
    OnlineInvoice:
      externalDocs:
        url: 'http://developer.xero.com/documentation/api/invoices/'
      properties:
        OnlineInvoiceUrl:
          description: URL to an online invoice.
          type: string
      type: object
    InvoiceReminders:
      type: object
      x-isObjectArray: true
      properties:
        InvoiceReminders:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceReminder'
    InvoiceReminder:
      externalDocs:
        url: 'http://developer.xero.com/documentation/api/invoice-reminders/'
      properties:
        Enabled:
          description: Setting for on or off.
          type: boolean
      type: object
    Items:
      type: object
      x-isObjectArray: true
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/Item'
    Item:
      externalDocs:
        url: 'http://developer.xero.com/documentation/api/items/'
      properties:
        Code:
          description: User-defined item code (max length = 30).
          maxLength: 30
          type: string
        InventoryAssetAccountCode:
          description: The inventory asset account for the item. The account must be of
            type INVENTORY. The COGSAccountCode in PurchaseDetails is also
            required to create a tracked item.
          type: string
        Name:
          description: The name of the item (max length = 50).
          maxLength: 50
          type: string
        IsSold:
          description: Boolean value, defaults to true. When IsSold is true, the item will
            be available on sales transactions in the Xero UI. If IsSold is
            updated to false, then Description and SalesDetails values will be
            nulled.
          type: boolean
        IsPurchased:
          description: Boolean value, defaults to true. When IsPurchased is true, the item
            is available for purchase transactions in the Xero UI. If
            IsPurchased is updated to false, then PurchaseDescription and
            PurchaseDetails values will be nulled.
          type: boolean
        Description:
          description: The sales description of the item (max length = 4000).
          maxLength: 4000
          type: string
        PurchaseDescription:
          description: The purchase description of the item (max length = 4000).
          maxLength: 4000
          type: string
        PurchaseDetails:
          $ref: '#/components/schemas/Purchase'
        SalesDetails:
          $ref: '#/components/schemas/Purchase'
        IsTrackedAsInventory:
          description: True for items that are tracked as inventory. An item will be
            tracked as inventory if the InventoryAssetAccountCode and
            COGSAccountCode are set.
          type: boolean
        TotalCostPool:
          description: The value of the item on hand. Calculated using average cost
            accounting.
          type: number
          format: double
          x-is-money: true
        QuantityOnHand:
          description: The quantity of the item on hand.
          type: number
          format: double
          x-is-money: true
        UpdatedDateUTC:
          description: Last modified date in UTC format.
          type: string
          x-is-msdate-time: true
          example: "/Date(1573755038314)/"
          readOnly: true
        ItemID:
          description: The Xero identifier for an Item.
          type: string
          format: uuid
        StatusAttributeString:
          description: Status of the object.
          type: string
        ValidationErrors:
          description: Displays an array of validation error messages from the API.
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
      required:
        - Code
      type: object
    Purchase:
      externalDocs:
        url: 'http://developer.xero.com/documentation/api/items/'
      properties:
        UnitPrice:
          description: Unit Price of the item. By default, UnitPrice is rounded to two
            decimal places. You can use four decimal places by adding the unitdp=4
            querystring parameter to your request.
          type: number
          format: double
          x-is-money: true
        AccountCode:
          description:  Default account code to use for purchased/sale. Not applicable to the purchase details of tracked items.
          type: string
        COGSAccountCode:
          description: Cost of goods sold account. Only applicable to the purchase details of tracked items.
          type: string
        TaxType:
          description: The tax type from TaxRates.
          type: string
      type: object
    Journals:
      type: object
      x-isObjectArray: true
      properties:
        Journals:
          type: array
          items:
            $ref: '#/components/schemas/Journal'
    Journal:
      externalDocs:
        url: 'http://developer.xero.com/documentation/api/journals/'
      properties:
        JournalID:
          description: Xero identifier
          type: string
          format: uuid
        JournalDate:
          description: Date the journal was posted.
          type: string
          x-is-msdate: true
        JournalNumber:
          description: Xero-generated journal number.
          type: integer
        CreatedDateUTC:
          description: Created date in UTC format.
          type: string
          x-is-msdate-time: true
          example: "/Date(1573755038314)/"
          readOnly: true
        Reference:
          description: Reference field for additional identifying information.
          type: string
        SourceID:
          description: Identifier for the source transaction, for example InvoiceID.
          type: string
          format: uuid
        SourceType:
          description: Journal source type. The type of transaction that created the
            journal.
          type: string
          enum:
            - ACCREC
            - ACCPAY
            - ACCRECCREDIT
            - ACCPAYCREDIT
            - ACCRECPAYMENT
            - ACCPAYPAYMENT
            - ARCREDITPAYMENT
            - APCREDITPAYMENT
            - CASHREC
            - CASHPAID
            - TRANSFER
            - ARPREPAYMENT
            - APPREPAYMENT
            - AROVERPAYMENT
            - APOVERPAYMENT
            - EXPCLAIM
            - EXPPAYMENT
            - MANJOURNAL
            - PAYSLIP
            - WAGEPAYABLE
            - INTEGRATEDPAYROLLPE
            - INTEGRATEDPAYROLLPT
            - EXTERNALSPENDMONEY
            - INTEGRATEDPAYROLLPTPAYMENT
            - INTEGRATEDPAYROLLCN
        JournalLines:
          description: See JournalLines.
          type: array
          items:
            $ref: '#/components/schemas/JournalLine'
      type: object
    JournalLine:
      externalDocs:
        url: 'https://developer.xero.com/documentation/api/journals#JournalLines'
      properties:
        JournalLineID:
          description: Xero identifier for Journal.
          type: string
          format: uuid
          example: 7be9db36-3598-4755-ba5c-c2dbc8c4a7a2
        AccountID:
          description: See Accounts.
          type: string
          format: uuid
          example: ceef66a5-a545-413b-9312-78a53caadbc4
        AccountCode:
          description: See Accounts.
          type: string
          example: 090
        AccountType:
          $ref: '#/components/schemas/AccountType'
          type: string
        AccountName:
          description: See AccountCodes.
          type: string
          example: Checking Account
        Description:
          description: Description from the source transaction line item. Only returned if populated.
          type: string
          example: My business checking account
        NetAmount:
          description: Net amount of a journal line. This is a positive value for a debit and negative value for a credit.
          type: number
          format: double
          x-is-money: true
          example: 4130.98
        GrossAmount:
          description: Gross amount of a journal line (NetAmount + TaxAmount).
          type: number
          format: double
          x-is-money: true
          example: 4130.98
        TaxAmount:
          description: Total tax on a journal line.
          type: number
          format: double
          x-is-money: true
          readOnly: true
          example: 0.00
        TaxType:
          description: The tax type from TaxRates.
          type: string
        TaxName:
          description: See TaxRates.
          type: string
          example: Tax Exempt
        TrackingCategories:
          description: Optional Tracking Category; see Tracking. Any Journal line can have a maximum of two <TrackingCategory> elements.
          type: array
          items:
            $ref: '#/components/schemas/TrackingCategory'
      type: object
    LinkedTransactions:
      type: object
      x-isObjectArray: true
      properties:
        LinkedTransactions:
          type: array
          items:
            $ref: '#/components/schemas/LinkedTransaction'
    LinkedTransaction:
      externalDocs:
        url: 'http://developer.xero.com/documentation/api/linked-transactions/'
      properties:
        SourceTransactionID:
          description:  Filter by the SourceTransactionID. Get all the linked transactions created from a particular ACCPAY invoice.
          type: string
          format: uuid
        SourceLineItemID:
          description: The line item identifier from the source transaction.
          type: string
          format: uuid
        ContactID:
          description:  Filter by the combination of ContactID and Status. Get all the
            linked transactions that are assigned to a particular customer
            and have a particular status, for example GET
            /LinkedTransactions?ContactID=4bb34b03-3378-4bb2-a0ed-6345abf3224e&Status=APPROVED.
          type: string
          format: uuid
        TargetTransactionID:
          description:  Filter by the TargetTransactionID. Get all the linked transactions allocated to a particular ACCREC invoice.
          type: string
          format: uuid
        TargetLineItemID:
          description: The line item identifier from the target transaction. It is possible to link multiple billable expenses to the same TargetLineItemID.
          type: string
          format: uuid
        LinkedTransactionID:
          description:  The Xero identifier for an Linked Transaction for example, /LinkedTransactions/297c2dc5-cc47-4afd-8ec8-74990b8761e9.
          type: string
          format: uuid
        Status:
          description:  Filter by the combination of ContactID and Status. Get all the
            linked transactions that are assigned to a particular customer
            and have a particular status, for example GET
            /LinkedTransactions?ContactID=4bb34b03-3378-4bb2-a0ed-6345abf3224e&Status=APPROVED.
          type: string
          enum:
            - APPROVED
            - DRAFT
            - ONDRAFT
            - BILLED
            - VOIDED
        Type:
          description:  This will always be BILLABLEEXPENSE. More types might be added in
            the future.
          type: string
          enum:
            - BILLABLEEXPENSE
        UpdatedDateUTC:
          description: The last modified date in UTC format.
          type: string
          x-is-msdate-time: true
          example: "/Date(1573755038314)/"
          readOnly: true
        SourceTransactionTypeCode:
          description:  Type of the source tranasction. This will be ACCPAY if the
            linked transaction was created from an invoice and SPEND if it was
            created from a bank transaction.
          type: string
          enum:
            - ACCPAY
            - SPEND
        ValidationErrors:
          description: Displays an array of validation error messages from the API.
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
      type: object
    ManualJournals:
      type: object
      x-isObjectArray: true
      properties:
        ManualJournals:
          type: array
          items:
            $ref: '#/components/schemas/ManualJournal'
    ManualJournal:
      externalDocs:
        url: 'http://developer.xero.com/documentation/api/manual-journals/'
      properties:
        Narration:
          description: Description of journal being posted.
          type: string
        JournalLines:
          description: See JournalLines.
          type: array
          items:
            $ref: '#/components/schemas/ManualJournalLine'
        Date:
          description: Date journal was posted in the format YYYY-MM-DD.
          type: string
          x-is-msdate: true
        LineAmountTypes:
          $ref: '#/components/schemas/LineAmountTypes'
          type: string
        Status:
          description: See Manual Journal Status Codes.
          type: string
          enum:
            - DRAFT
            - POSTED
            - DELETED
            - VOIDED
            - ARCHIVED
        Url:
          description:  URL link to a source document; shown as “Go to [appName]” in the
            Xero app.
          type: string
        ShowOnCashBasisReports:
          description: Boolean. The default is true if not specified.
          type: boolean
        HasAttachments:
          description: Boolean to indicate if a manual journal has an attachment.
          readOnly: true
          type: boolean
          default: "false"
          example: "false"
        UpdatedDateUTC:
          description: Last modified date in UTC format.
          type: string
          x-is-msdate-time: true
          example: "/Date(1573755038314)/"
          readOnly: true
        ManualJournalID:
          description: The Xero identifier for a Manual Journal.
          type: string
          format: uuid
        StatusAttributeString:
          description: A string to indicate an invoice's status.
          type: string
          example: ERROR
        Warnings:
          description: Displays an array of warning messages from the API.
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
        ValidationErrors:
          description: Displays an array of validation error messages from the API.
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
        Attachments:
          description: Displays an array of attachments from the API.
          type: array
          items:
            $ref: '#/components/schemas/Attachment'
      required:
        - Narration
      type: object
    ManualJournalLine:
      externalDocs:
        url: 'http://developer.xero.com/documentation/api/manual-journals/'
      properties:
        LineAmount:
          description: Total for the line. Debits are positive values and credits are negative values.
          type: number
          format: double
          x-is-money: true
          example: -2569.00
        AccountCode:
          description: See Accounts.
          type: string
          example: 720
        AccountID:
          description: See Accounts.
          type: string
          format: uuid
        Description:
          description: Description for a journal line.
          type: string
          example: Coded incorrectly Office Equipment should be Computer Equipment
        TaxType:
          description: The tax type from TaxRates.
          type: string
        Tracking:
          description: Optional Tracking Category; see Tracking. Any journal line can have a maximum of two <TrackingCategory> elements.
          type: array
          items:
            $ref: '#/components/schemas/TrackingCategory'
        TaxAmount:
          description: The calculated tax amount based on the TaxType and LineAmount.
          readOnly: true
          type: number
          format: double
          x-is-money: true
          example: 0.00
        IsBlank:
          description: Determines whether or not the line is blank.
          type: boolean
          example: false
      type: object
    Actions:
      type: object
      x-isObjectArray: true
      properties:
        Actions:
          type: array
          items:
            $ref: '#/components/schemas/Action'
    Action:
      externalDocs:
        url: 'http://developer.xero.com/documentation/api/organisation/'
      properties:
        Name:
          description: Name of the actions for this organisation.
          type: string
          example: UseMulticurrency
        Status:
          description: Status of the action for this organisation.
          type: string
          enum:
            - ALLOWED
            - NOT-ALLOWED
    Organisations:
      type: object
      x-isObjectArray: true
      properties:
        Organisations:
          type: array
          items:
            $ref: '#/components/schemas/Organisation'
    Organisation:
      externalDocs:
        url: 'http://developer.xero.com/documentation/api/organisation/'
      properties:
        OrganisationID:
          description: Unique Xero identifier.
          type: string
          format: uuid
          example: 8be9db36-3598-4755-ba5c-c2dbc8c4a7a2
        APIKey:
          description: Displays a unique key used for Xero-to-Xero transactions.
          type: string
        Name:
          description: Display name of an organisation shown in Xero.
          type: string
        LegalName:
          description: organisation name shown on reports.
          type: string
        PaysTax:
          description: Boolean to describe if an organisation is registered with a local tax
            authority.
          type: boolean
        Version:
          description: See Version Types.
          type: string
          enum:
            - AU
            - NZ
            - GLOBAL
            - UK
            - US
            - AUONRAMP
            - NZONRAMP
            - GLOBALONRAMP
            - UKONRAMP
            - USONRAMP
        OrganisationType:
          description: organisation type.
          type: string
          enum:
            - ACCOUNTING_PRACTICE
            - COMPANY
            - CHARITY
            - CLUB_OR_SOCIETY
            - LOOK_THROUGH_COMPANY
            - NOT_FOR_PROFIT
            - PARTNERSHIP
            - S_CORPORATION
            - SELF_MANAGED_SUPERANNUATION_FUND
            - SOLE_TRADER
            - SUPERANNUATION_FUND
            - TRUST
        BaseCurrency:
          $ref: '#/components/schemas/CurrencyCode'
          type: string
        CountryCode:
          $ref: '#/components/schemas/CountryCode'
          type: string
        IsDemoCompany:
          description: Boolean to describe if an organisation is a demo company.
          type: boolean
        OrganisationStatus:
          description: Set to ACTIVE if you can connect to the organisation via the
            Xero API.
          type: string
        RegistrationNumber:
          description: Shows for New Zealand, Australian, and UK organizations.
          type: string
        EmployerIdentificationNumber:
          description: Shown if set. US Only.
          type: string
        TaxNumber:
          description: Shown if set. Displays in the Xero UI as Tax File Number (AU), GST
            Number (NZ), VAT Number (UK), and Tax ID Number (US & Global).
          type: string
        FinancialYearEndDay:
          description: Calendar day, for example 0-31.
          type: integer
        FinancialYearEndMonth:
          description: Calendar month, for example 1-12.
          type: integer
        SalesTaxBasis:
          description: The accounting basis used for tax returns. See Sales Tax Basis.
          type: string
          enum:
            - PAYMENTS
            - INVOICE
            - NONE
            - CASH
            - ACCRUAL
            - FLATRATECASH
            - FLATRATEACCRUAL
            - ACCRUALS
        SalesTaxPeriod:
          description:  The frequency with which tax returns are processed. See Sales Tax
            Period.
          type: string
          enum:
            - MONTHLY
            - QUARTERLY1
            - QUARTERLY2
            - QUARTERLY3
            - ANNUALLY
            - ONEMONTHS
            - TWOMONTHS
            - SIXMONTHS
            - 1MONTHLY
            - 2MONTHLY
            - 3MONTHLY
            - 6MONTHLY
            - QUARTERLY
            - YEARLY
            - NONE
        DefaultSalesTax:
          description: The default for LineAmountTypes on sales transactions.
          type: string
        DefaultPurchasesTax:
          description: The default for LineAmountTypes on purchase transactions.
          type: string
        PeriodLockDate:
          description: Shown if set. See Lock Dates.
          type: string
          x-is-msdate: true
        EndOfYearLockDate:
          description: Shown if set. See Lock Dates.
          type: string
          x-is-msdate: true
        CreatedDateUTC:
          description: Timestamp of when the organisation was created in Xero.
          type: string
          x-is-msdate-time: true
          example: "/Date(1573755038314)/"
          readOnly: true
        Timezone:
          $ref: '#/components/schemas/TimeZone'
          type: string
        OrganisationEntityType:
          description: organisation entity type.
          type: string
          enum:
            - ACCOUNTING_PRACTICE
            - COMPANY
            - CHARITY
            - CLUB_OR_SOCIETY
            - LOOK_THROUGH_COMPANY
            - NOT_FOR_PROFIT
            - PARTNERSHIP
            - S_CORPORATION
            - SELF_MANAGED_SUPERANNUATION_FUND
            - SOLE_TRADER
            - SUPERANNUATION_FUND
            - TRUST
        ShortCode:
          description: A unique identifier for the organisation. Potential uses.
          type: string
        Class:
          description: organisation classes describe which plan the Xero organisation is on, for example DEMO, TRIAL, or PREMIUM.
          type: string
          enum:
            - DEMO
            - TRIAL
            - STARTER
            - STANDARD
            - PREMIUM
            - PREMIUM_20
            - PREMIUM_50
            - PREMIUM_100
            - LEDGER
            - GST_CASHBOOK
            - NON_GST_CASHBOOK
        Edition:
          description: BUSINESS or PARTNER. Partner edition organizations are sold exclusively through accounting partners and have restricted functionality, for example no access to invoicing.
          type: string
          enum:
            - BUSINESS
            - PARTNER
        LineOfBusiness:
          description: Description of the business type as defined in the Organisation settings
          type: string
        Addresses:
          description: Address details for the organisation; see Addresses.
          type: array
          items:
            $ref: '#/components/schemas/AddressForOrganisation'
        Phones:
          description: Phones details for the organisation; see Phones.
          type: array
          items:
            $ref: '#/components/schemas/Phone'
        ExternalLinks:
          description: Organisation profile links for popular services such as Facebook,Twitter, GooglePlus, and LinkedIn. You can also add links to your
            website here. Shown if the Organisation settings are updated in Xero.
          type: array
          items:
            $ref: '#/components/schemas/ExternalLink'
        PaymentTerms:
          $ref: '#/components/schemas/PaymentTerm'
      type: object
    CountryCode:
      type: string
      enum:
        - AD
        - AE
        - AF
        - AG
        - AI
        - AL
        - AM
        - AN
        - AO
        - AQ
        - AR
        - AS
        - AT
        - AU
        - AW
        - AZ
        - BA
        - BB
        - BD
        - BE
        - BF
        - BG
        - BH
        - BI
        - BJ
        - BL
        - BM
        - BN
        - BO
        - BR
        - BS
        - BT
        - BW
        - BY
        - BZ
        - CA
        - CC
        - CD
        - CF
        - CG
        - CH
        - CI
        - CK
        - CL
        - CM
        - CN
        - CO
        - CR
        - CU
        - CV
        - CW
        - CX
        - CY
        - CZ
        - DE
        - DJ
        - DK
        - DM
        - DO
        - DZ
        - EC
        - EE
        - EG
        - EH
        - ER
        - ES
        - ET
        - FI
        - FJ
        - FK
        - FM
        - FO
        - FR
        - GA
        - GB
        - GD
        - GE
        - GG
        - GH
        - GI
        - GL
        - GM
        - GN
        - GQ
        - GR
        - GT
        - GU
        - GW
        - GY
        - HK
        - HN
        - HR
        - HT
        - HU
        - ID
        - IE
        - IL
        - IM
        - IN
        - IO
        - IQ
        - IR
        - IS
        - IT
        - JE
        - JM
        - JO
        - JP
        - KE
        - KG
        - KH
        - KI
        - KM
        - KN
        - KP
        - KR
        - KW
        - KY
        - KZ
        - LA
        - LB
        - LC
        - LI
        - LK
        - LR
        - LS
        - LT
        - LU
        - LV
        - LY
        - MA
        - MC
        - MD
        - ME
        - MF
        - MG
        - MH
        - MK
        - ML
        - MM
        - MN
        - MO
        - MP
        - MR
        - MS
        - MT
        - MU
        - MV
        - MW
        - MX
        - MY
        - MZ
        - NA
        - NC
        - NE
        - NG
        - NI
        - NL
        - "NO"
        - NP
        - NR
        - NU
        - NZ
        - OM
        - PA
        - PE
        - PF
        - PG
        - PH
        - PK
        - PL
        - PM
        - PN
        - PR
        - PS
        - PT
        - PW
        - PY
        - QA
        - RE
        - RO
        - RS
        - RU
        - RW
        - SA
        - SB
        - SC
        - SD
        - SE
        - SG
        - SH
        - SI
        - SJ
        - SK
        - SL
        - SM
        - SN
        - SO
        - SR
        - SS
        - ST
        - SV
        - SX
        - SY
        - SZ
        - TC
        - TD
        - TG
        - TH
        - TJ
        - TK
        - TL
        - TM
        - TN
        - TO
        - TR
        - TT
        - TV
        - TW
        - TZ
        - UA
        - UG
        - US
        - UY
        - UZ
        - VA
        - VC
        - VE
        - VG
        - VI
        - VN
        - VU
        - WF
        - WS
        - XK
        - YE
        - YT
        - ZA
        - ZM
        - ZW
    TimeZone:
      description: Timezone specifications
      type: string
      enum:
        - MOROCCOSTANDARDTIME
        - UTC
        - GMTSTANDARDTIME
        - GREENWICHSTANDARDTIME
        - WEUROPESTANDARDTIME
        - CENTRALEUROPESTANDARDTIME
        - ROMANCESTANDARDTIME
        - CENTRALEUROPEANSTANDARDTIME
        - WCENTRALAFRICASTANDARDTIME
        - NAMIBIASTANDARDTIME
        - JORDANSTANDARDTIME
        - GTBSTANDARDTIME
        - MIDDLEEASTSTANDARDTIME
        - EGYPTSTANDARDTIME
        - SYRIASTANDARDTIME
        - EEUROPESTANDARDTIME
        - SOUTHAFRICASTANDARDTIME
        - FLESTANDARDTIME
        - TURKEYSTANDARDTIME
        - ISRAELSTANDARDTIME
        - KALININGRADSTANDARDTIME
        - LIBYASTANDARDTIME
        - ARABICSTANDARDTIME
        - ARABSTANDARDTIME
        - BELARUSSTANDARDTIME
        - RUSSIANSTANDARDTIME
        - EAFRICASTANDARDTIME
        - IRANSTANDARDTIME
        - ARABIANSTANDARDTIME
        - AZERBAIJANSTANDARDTIME
        - RUSSIATIMEZONE3
        - MAURITIUSSTANDARDTIME
        - GEORGIANSTANDARDTIME
        - CAUCASUSSTANDARDTIME
        - AFGHANISTANSTANDARDTIME
        - WESTASIASTANDARDTIME
        - EKATERINBURGSTANDARDTIME
        - PAKISTANSTANDARDTIME
        - INDIASTANDARDTIME
        - SRILANKASTANDARDTIME
        - NEPALSTANDARDTIME
        - CENTRALASIASTANDARDTIME
        - BANGLADESHSTANDARDTIME
        - NCENTRALASIASTANDARDTIME
        - MYANMARSTANDARDTIME
        - SEASIASTANDARDTIME
        - NORTHASIASTANDARDTIME
        - CHINASTANDARDTIME
        - NORTHASIAEASTSTANDARDTIME
        - SINGAPORESTANDARDTIME
        - WAUSTRALIASTANDARDTIME
        - TAIPEISTANDARDTIME
        - ULAANBAATARSTANDARDTIME
        - TOKYOSTANDARDTIME
        - KOREASTANDARDTIME
        - YAKUTSKSTANDARDTIME
        - CENAUSTRALIASTANDARDTIME
        - AUSCENTRALSTANDARDTIME
        - EAUSTRALIASTANDARDTIME
        - AUSEASTERNSTANDARDTIME
        - WESTPACIFICSTANDARDTIME
        - TASMANIASTANDARDTIME
        - MAGADANSTANDARDTIME
        - VLADIVOSTOKSTANDARDTIME
        - RUSSIATIMEZONE10
        - CENTRALPACIFICSTANDARDTIME
        - RUSSIATIMEZONE11
        - NEWZEALANDSTANDARDTIME
        - UTC+12
        - UTC+13
        - FIJISTANDARDTIME
        - KAMCHATKASTANDARDTIME
        - TONGASTANDARDTIME
        - SAMOASTANDARDTIME
        - LINEISLANDSSTANDARDTIME
        - AZORESSTANDARDTIME
        - CAPEVERDESTANDARDTIME
        - UTC02
        - MIDATLANTICSTANDARDTIME
        - ESOUTHAMERICASTANDARDTIME
        - ARGENTINASTANDARDTIME
        - SAEASTERNSTANDARDTIME
        - GREENLANDSTANDARDTIME
        - MONTEVIDEOSTANDARDTIME
        - BAHIASTANDARDTIME
        - NEWFOUNDLANDSTANDARDTIME
        - PARAGUAYSTANDARDTIME
        - ATLANTICSTANDARDTIME
        - CENTRALBRAZILIANSTANDARDTIME
        - SAWESTERNSTANDARDTIME
        - PACIFICSASTANDARDTIME
        - VENEZUELASTANDARDTIME
        - SAPACIFICSTANDARDTIME
        - EASTERNSTANDARDTIME
        - USEASTERNSTANDARDTIME
        - CENTRALAMERICASTANDARDTIME
        - CENTRALSTANDARDTIME
        - CENTRALSTANDARDTIME(MEXICO)
        - CANADACENTRALSTANDARDTIME
        - USMOUNTAINSTANDARDTIME
        - MOUNTAINSTANDARDTIME(MEXICO)
        - MOUNTAINSTANDARDTIME
        - PACIFICSTANDARDTIME(MEXICO)
        - PACIFICSTANDARDTIME
        - ALASKANSTANDARDTIME
        - HAWAIIANSTANDARDTIME
        - UTC11
        - DATELINESTANDARDTIME
    PaymentTerm:
      externalDocs:
        url: 'http://developer.xero.com/documentation/api/organisation/'
      properties:
        Bills:
          $ref: '#/components/schemas/Bill'
        Sales:
          $ref: '#/components/schemas/Bill'
      type: object
    PaymentTermType:
      type: string
      enum:
        - DAYSAFTERBILLDATE
        - DAYSAFTERBILLMONTH
        - OFCURRENTMONTH
        - OFFOLLOWINGMONTH
    ExternalLink:
      externalDocs:
        url: 'http://developer.xero.com/documentation/api/organisation/'
      properties:
        LinkType:
          description: See External Link Types.
          type: string
          enum:
            - Facebook
            - GooglePlus
            - LinkedIn
            - Twitter
            - Website
        Url:
          description: URL for the service, for example http://twitter.com/xeroapi.
          type: string
        Description:
          type: string
      type: object
    Bill:
      externalDocs:
        url: 'http://developer.xero.com/documentation/api/organisation/'
      properties:
        Day:
          description: Day of Month (0-31)
          type: integer
        Type:
          $ref: '#/components/schemas/PaymentTermType'
      type: object
    Overpayments:
      type: object
      x-isObjectArray: true
      properties:
        Overpayments:
          type: array
          items:
            $ref: '#/components/schemas/Overpayment'
    Overpayment:
      externalDocs:
        url: 'http://developer.xero.com/documentation/api/overpayments/'
      properties:
        Type:
          description: See Overpayment Types.
          type: string
          enum:
            - RECEIVE-OVERPAYMENT
            - SPEND-OVERPAYMENT
            - AROVERPAYMENT
        Contact:
          $ref: '#/components/schemas/Contact'
        Date:
          description: The date the overpayment is created in the format YYYY-MM-DD.
          type: string
          x-is-msdate: true
        Status:
          description: See Overpayment Status Codes.
          type: string
          enum:
            - AUTHORISED
            - PAID
            - VOIDED
        LineAmountTypes:
          $ref: '#/components/schemas/LineAmountTypes'
          type: string
        LineItems:
          description: See Overpayment Line Items.
          type: array
          items:
            $ref: '#/components/schemas/LineItem'
        SubTotal:
          description: The subtotal of the overpayment, excluding taxes.
          type: number
          format: double
          x-is-money: true
        TotalTax:
          description: The total tax on the overpayment.
          type: number
          format: double
          x-is-money: true
        Total:
          description: The total of the overpayment (subtotal + total tax).
          type: number
          format: double
          x-is-money: true
        UpdatedDateUTC:
          description: UTC timestamp of the last update to the overpayment.
          type: string
          x-is-msdate-time: true
          example: "/Date(1573755038314)/"
          readOnly: true
        CurrencyCode:
          $ref: '#/components/schemas/CurrencyCode'
          type: string
        OverpaymentID:
          description: Xero-generated unique identifier.
          type: string
          format: uuid
        CurrencyRate:
          description: The currency rate for a multicurrency overpayment. If no rate is
            specified, the XE.com day rate is used.
          type: number
          format: double
          x-is-money: true
        RemainingCredit:
          description: The remaining credit balance on the overpayment.
          type: number
          format: double
          x-is-money: true
        Allocations:
          description: See Allocations.
          type: array
          items:
            $ref: '#/components/schemas/Allocation'
        AppliedAmount:
          description: The amount applied to an invoice.
          type: number
          format: double
          example: 2.00
        Payments:
          description: See Payments.
          type: array
          items:
            $ref: '#/components/schemas/Payment'
        HasAttachments:
          description: Boolean to indicate if an overpayment has an attachment.
          readOnly: true
          type: boolean
          default: "false"
          example: "false"
        Attachments:
          description: See Attachments.
          type: array
          items:
            $ref: '#/components/schemas/Attachment'
      type: object
    Payments:
      type: object
      x-isObjectArray: true
      properties:
        Payments:
          type: array
          items:
            $ref: '#/components/schemas/Payment'
    PaymentDelete:
      externalDocs:
        url: 'http://developer.xero.com/documentation/api/payments/'
      properties:
        Status:
          description: The status of the payment.
          type: string
          default: "DELETED"
      required:
        - Status
      type: object
    Payment:
      externalDocs:
        url: 'http://developer.xero.com/documentation/api/payments/'
      properties:
        Invoice:
          $ref: '#/components/schemas/Invoice'
        CreditNote:
          $ref: '#/components/schemas/CreditNote'
        Prepayment:
          $ref: '#/components/schemas/Prepayment'
        Overpayment:
          $ref: '#/components/schemas/Overpayment'
        InvoiceNumber:
          description: Number of invoices or credit notes you are applying the payment to, for example INV-4003.
          type: string
        CreditNoteNumber:
          description: Number of invoices or credit notes you are applying the payment to, for example INV-4003.
          type: string
        Account:
          $ref: '#/components/schemas/Account'
        Code:
          description: Code of the account you are using to make the payment, for example 001 (not all accounts have a code value).
          type: string
        Date:
          description: Date the payment is being made (YYYY-MM-DD), for example 2009-09-06.
          type: string
          x-is-msdate: true
        CurrencyRate:
          description: Exchange rate when the payment is received. Only used for non base
            currency invoices and credit notes, for example 0.7500.
          type: number
          format: double
          x-is-money: true
        Amount:
          description: The amount of the payment. Must be less than or equal to the
            outstanding amount owed on the invoice, for example 200.00.
          type: number
          format: double
          x-is-money: true
        Reference:
          description: An optional description for the payment, for example Direct Debit.
          type: string
        IsReconciled:
          description: An optional boolean value indicating whether the payment is created as reconciled when using
            PUT, or whether a payment has been reconciled when using GET.
          type: boolean
        Status:
          description: The status of the payment.
          type: string
          enum:
            - AUTHORISED
            - DELETED
        PaymentType:
          description: See Payment Types.
          readOnly: true
          type: string
          enum:
            - ACCRECPAYMENT
            - ACCPAYPAYMENT
            - ARCREDITPAYMENT
            - APCREDITPAYMENT
            - AROVERPAYMENTPAYMENT
            - ARPREPAYMENTPAYMENT
            - APPREPAYMENTPAYMENT
            - APOVERPAYMENTPAYMENT
        UpdatedDateUTC:
          description: UTC timestamp of last update to the payment.
          type: string
          x-is-msdate-time: true
          example: "/Date(1573755038314)/"
          readOnly: true
        PaymentID:
          description: The Xero identifier for a payment, for example 297c2dc5-cc47-4afd-8ec8-74990b8761e9
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        BatchPaymentID:
          description: Present if the payment was created as part of a batch.
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        BankAccountNumber:
          description: The supplier's bank account number the payment is being made to.
          type: string
        Particulars:
          description: The supplier's bank account number the payment is being made to.
          type: string
        Details:
          description: The information to appear on the supplier's bank account.
          type: string
        HasAccount:
          description: A boolean to indicate if a contact has any validation errors.
          type: boolean
          default: "false"
          example: "false"
        HasValidationErrors:
          description: A boolean to indicate if a contact has any validation errors.
          type: boolean
          default: "false"
          example: "false"
        StatusAttributeString:
          description: A string to indicate if an invoice's status.
          type: string
        ValidationErrors:
          description: Displays an array of validation error messages from the API.
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
      type: object
    Prepayments:
      type: object
      x-isObjectArray: true
      properties:
        Prepayments:
          type: array
          items:
            $ref: '#/components/schemas/Prepayment'
    Prepayment:
      externalDocs:
        url: 'http://developer.xero.com/documentation/api/prepayments/'
      properties:
        Type:
          description: See Prepayment Types.
          type: string
          enum:
            - RECEIVE-PREPAYMENT
            - SPEND-PREPAYMENT
            - ARPREPAYMENT
            - APPREPAYMENT
        Contact:
          $ref: '#/components/schemas/Contact'
        Date:
          description: The date the prepayment is created in the format YYYY-MM-DD.
          type: string
          x-is-msdate: true
        Status:
          description: See Prepayment Status Codes.
          type: string
          enum:
            - AUTHORISED
            - PAID
            - VOIDED
        LineAmountTypes:
          $ref: '#/components/schemas/LineAmountTypes'
          type: string
        LineItems:
          description: See Prepayment Line Items.
          type: array
          items:
            $ref: '#/components/schemas/LineItem'
        SubTotal:
          description: The subtotal of the prepayment, excluding taxes.
          type: number
          format: double
          x-is-money: true
        TotalTax:
          description: The total tax on the prepayment.
          type: number
          format: double
          x-is-money: true
        Total:
          description: The total of the prepayment (subtotal + total tax).
          type: number
          format: double
          x-is-money: true
        Reference:
          description: Returns the Invoice number field. Reference field isn't available.
          type: string
          readOnly: true
        UpdatedDateUTC:
          description: UTC timestamp of the last update to the prepayment.
          type: string
          x-is-msdate-time: true
          example: "/Date(1573755038314)/"
          readOnly: true
        CurrencyCode:
          $ref: '#/components/schemas/CurrencyCode'
          type: string
        PrepaymentID:
          description: Xero-generated unique identifier.
          type: string
          format: uuid
        CurrencyRate:
          description: The currency rate for a multicurrency prepayment. If no rate is
            specified, the XE.com day rate is used.
          type: number
          format: double
          x-is-money: true
        RemainingCredit:
          description: The remaining credit balance on the prepayment.
          type: number
          format: double
          x-is-money: true
        Allocations:
          description: See Allocations.
          type: array
          items:
            $ref: '#/components/schemas/Allocation'
        AppliedAmount:
          description: The amount applied to an invoice.
          type: number
          format: double
          example: 2.00
        HasAttachments:
          description: Boolean to indicate if a prepayment has an attachment.
          readOnly: true
          type: boolean
          default: "false"
          example: "false"
        Attachments:
          description: See Attachments.
          type: array
          items:
            $ref: '#/components/schemas/Attachment'
      type: object
    PurchaseOrders:
      type: object
      x-isObjectArray: true
      properties:
        PurchaseOrders:
          type: array
          items:
            $ref: '#/components/schemas/PurchaseOrder'
    PurchaseOrder:
      externalDocs:
        url: 'http://developer.xero.com/documentation/api/purchase-orders/'
      properties:
        Contact:
          $ref: '#/components/schemas/Contact'
        LineItems:
          description: See LineItems
          type: array
          items:
            $ref: '#/components/schemas/LineItem'
        Date:
          description: Date purchase order was issued in the format YYYY-MM-DD. If the Date element is not specified, then it will default to the current date based on the
            timezone setting of the organisation.
          type: string
          x-is-msdate: true
        DeliveryDate:
          description: Date the goods are to be delivered in the format YYYY-MM-DD.
          type: string
          x-is-msdate: true
        LineAmountTypes:
          $ref: '#/components/schemas/LineAmountTypes'
          type: string
        PurchaseOrderNumber:
          description: Unique alphanumeric code identifying the purchase order. When this value is missing,
            it will be auto-generated from your Organisation Invoice Settings.
          type: string
        Reference:
          description: Additional reference number.
          type: string
        BrandingThemeID:
          description: See Branding Themes.
          type: string
          format: uuid
        CurrencyCode:
          $ref: '#/components/schemas/CurrencyCode'
          type: string
        Status:
          description: See Purchase Order Status Codes.
          type: string
          enum:
            - DRAFT
            - SUBMITTED
            - AUTHORISED
            - BILLED
            - DELETED
        SentToContact:
          description: Boolean to set whether or not the purchase order should be marked as
            “sent”. This can be set only on purchase orders that have been
            approved or billed.
          type: boolean
        DeliveryAddress:
          description: The address the goods are to be delivered to.
          type: string
        AttentionTo:
          description: The person that the delivery is going to.
          type: string
        Telephone:
          description: The phone number for the person accepting the delivery.
          type: string
        DeliveryInstructions:
          description: A free text feild for instructions (500 characters max).
          type: string
        ExpectedArrivalDate:
          description: The date the goods are expected to arrive.
          type: string
          x-is-msdate: true
        PurchaseOrderID:
          description: Xero-generated unique identifier for the purchase order.
          type: string
          format: uuid
        CurrencyRate:
          description: The currency rate for a multicurrency purchase order. If no rate is specified, the XE.com day rate is used.
          type: number
          format: double
          x-is-money: true
        SubTotal:
          description: Total of the purchase order, excluding taxes.
          readOnly: true
          type: number
          format: double
          x-is-money: true
        TotalTax:
          description: Total tax on the purchase order.
          readOnly: true
          type: number
          format: double
          x-is-money: true
        Total:
          description: Total of the purchase order, tax inclusive (SubTotal + TotalTax).
          readOnly: true
          type: number
          format: double
          x-is-money: true
        TotalDiscount:
          description: Total of the discounts applied on the purchase order line items.
          readOnly: true
          type: number
          format: double
          x-is-money: true
        HasAttachments:
          description: Boolean to indicate if a purchase order has an attachment.
          readOnly: true
          type: boolean
          default: "false"
          example: "false"
        UpdatedDateUTC:
          description: Last modified date in UTC format.
          type: string
          x-is-msdate-time: true
          example: "/Date(1573755038314)/"
          readOnly: true
        StatusAttributeString:
          description: A string to indicate if an invoice's status.
          type: string
        ValidationErrors:
          description: Displays an array of validation error messages from the API.
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
        Warnings:
          description: Displays an array of warning messages from the API.
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
        Attachments:
          description: Displays an array of attachments from the API.
          type: array
          items:
            $ref: '#/components/schemas/Attachment'
      type: object
    Quotes:
      type: object
      x-isObjectArray: true
      properties:
        Quotes:
          type: array
          items:
            $ref: '#/components/schemas/Quote'
    Quote:
      externalDocs:
        url: 'http://developer.xero.com/documentation/api/Quotes/'
      properties:
        QuoteID:
          description: QuoteID GUID is automatically generated and is returned after create or GET.
          type: string
          format: uuid
        QuoteNumber:
          description: Unique alphanumeric code identifying a quote (Max Length = 255).
          maxLength: 255
          type: string
        Reference:
          description: Additional reference number.
          maxLength: 4000
          type: string
        Terms:
          description: Terms of the quote.
          maxLength: 4000
          type: string
        Contact:
          $ref: '#/components/schemas/Contact'
          type: string
        LineItems:
          description: See Line Items.
          type: array
          items:
            $ref: '#/components/schemas/LineItem'
        Date:
          description: Date quote was issued in YYYY-MM-DD format. If the Date element is not specified, it defaults to the current date based on the timezone setting of the organisation.
          type: string
          x-is-msdate: true
        DateString:
          description: Date the quote was issued (YYYY-MM-DD).
          type: string
        ExpiryDate:
          description: Date the quote expires (YYYY-MM-DD).
          type: string
          x-is-msdate: true
        ExpiryDateString:
          description: Date the quote expires (YYYY-MM-DD).
          type: string
        Status:
          $ref: '#/components/schemas/QuoteStatusCodes'
          type: string
        CurrencyCode:
          $ref: '#/components/schemas/CurrencyCode'
          type: string
        CurrencyRate:
          description: The currency rate for a multicurrency quote.
          type: number
          format: double
        SubTotal:
          description: Total of the quote, excluding taxes.
          readOnly: true
          type: number
          format: double
          x-is-money: true
        TotalTax:
          description: Total tax on the quote.
          readOnly: true
          type: number
          format: double
          x-is-money: true
        Total:
          description: Total of the quote, tax inclusive (SubTotal + TotalTax). This is ignored if it doesn’t equal the sum of the LineAmounts.
          readOnly: true
          type: number
          format: double
          x-is-money: true
        TotalDiscount:
          description: Total of the discounts applied on the quote line items.
          readOnly: true
          type: number
          format: double
          x-is-money: true
        Title:
          description: Title text for the quote.
          type: string
          maxLength: 100
        Summary:
          description: Summary text for the quote.
          type: string
          maxLength: 3000
        BrandingThemeID:
          description: See Branding Themes.
          type: string
          format: uuid
        UpdatedDateUTC:
          description: Last modified date in UTC format.
          type: string
          x-is-msdate-time: true
          example: "/Date(1573755038314)/"
          readOnly: true
        LineAmountTypes:
          $ref: '#/components/schemas/QuoteLineAmountTypes'
          type: string
          description: See Quote Line Amount Types.
        StatusAttributeString:
          description: A string to indicate an invoice's status.
          type: string
        ValidationErrors:
          description: Displays an array of validation error messages from the API.
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
      type: object
    QuoteLineAmountTypes:
      description: Line amounts are exclusive of tax by default if you don’t specify this element. See Line Amount Types.
      type: string
      enum:
        - EXCLUSIVE
        - INCLUSIVE
        - NOTAX
    QuoteStatusCodes:
      description: The status of the quote.
      type: string
      enum:
        - DRAFT
        - SENT
        - DECLINED
        - ACCEPTED
        - INVOICED
        - DELETED
    Receipts:
      type: object
      x-isObjectArray: true
      properties:
        Receipts:
          type: array
          items:
            $ref: '#/components/schemas/Receipt'
    Receipt:
      externalDocs:
        url: 'http://developer.xero.com/documentation/api/receipts/'
      properties:
        Date:
          description: Date of receipt in YYYY-MM-DD format.
          type: string
          x-is-msdate: true
        Contact:
          $ref: '#/components/schemas/Contact'
        LineItems:
          type: array
          items:
            $ref: '#/components/schemas/LineItem'
        User:
          $ref: '#/components/schemas/User'
        Reference:
          description: Additional reference number.
          type: string
        LineAmountTypes:
          $ref: '#/components/schemas/LineAmountTypes'
          type: string
        SubTotal:
          description: Total of the receipt, excluding taxes.
          type: number
          format: double
          x-is-money: true
        TotalTax:
          description: Total tax on the receipt.
          type: number
          format: double
          x-is-money: true
        Total:
          description: Total of the receipt, tax inclusive (SubTotal + TotalTax).
          type: number
          format: double
          x-is-money: true
        ReceiptID:
          description: Xero-generated unique identifier for the receipt.
          type: string
          format: uuid
        Status:
          description: Current status of the receipt. See Status Types.
          type: string
          enum:
            - DRAFT
            - SUBMITTED
            - AUTHORISED
            - DECLINED
            - VOIDED
        ReceiptNumber:
          description: Xero-generated sequence number for the receipt in the current claim for a given user.
          readOnly: true
          type: string
        UpdatedDateUTC:
          description: Last modified date in UTC format.
          type: string
          x-is-msdate-time: true
          example: "/Date(1573755038314)/"
          readOnly: true
        HasAttachments:
          description: Boolean to indicate if a receipt has an attachment.
          readOnly: true
          type: boolean
          default: "false"
          example: "false"
        Url:
          description: URL link to a source document; shown as “Go to [appName]” in the Xero app.
          readOnly: true
          type: string
        ValidationErrors:
          description: Displays an array of validation error messages from the API.
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
        Warnings:
          description: Displays an array of warning messages from the API.
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
        Attachments:
          description: Displays array of attachments from the API
          type: array
          items:
            $ref: '#/components/schemas/Attachment'
      type: object
    RepeatingInvoices:
      type: object
      x-isObjectArray: true
      properties:
        RepeatingInvoices:
          type: array
          items:
            $ref: '#/components/schemas/RepeatingInvoice'
    RepeatingInvoice:
      externalDocs:
        url: 'http://developer.xero.com/documentation/api/repeating-invoices/'
      properties:
        Type:
          description: See Invoice Types.
          type: string
          enum:
            - ACCPAY
            - ACCREC
        Contact:
          $ref: '#/components/schemas/Contact'
        Schedule:
          $ref: '#/components/schemas/Schedule'
        LineItems:
          description: See Line Items.
          type: array
          items:
            $ref: '#/components/schemas/LineItem'
        LineAmountTypes:
          $ref: '#/components/schemas/LineAmountTypes'
          type: string
        Reference:
          description: ACCREC only – additional reference number.
          type: string
        BrandingThemeID:
          description: See Branding Themes.
          type: string
          format: uuid
        CurrencyCode:
          $ref: '#/components/schemas/CurrencyCode'
          type: string
        Status:
          description:  One of the following; DRAFT or AUTHORISED. See Invoice Status
            Codes.
          type: string
          enum:
            - DRAFT
            - AUTHORISED
            - DELETED
        SubTotal:
          description: Total of the invoice, excluding taxes.
          type: number
          format: double
          x-is-money: true
        TotalTax:
          description: Total tax on the invoice.
          type: number
          format: double
          x-is-money: true
        Total:
          description: Total of the invoice, tax inclusive (SubTotal + TotalTax).
          type: number
          format: double
          x-is-money: true
        RepeatingInvoiceID:
          description: Xero-generated unique identifier for repeating invoice template.
          type: string
          format: uuid
        ID:
          description: Xero-generated unique identifier for repeating invoice template.
          type: string
          format: uuid
        HasAttachments:
          description: Boolean to indicate if an invoice has an attachment.
          readOnly: true
          type: boolean
          default: "false"
          example: "false"
        Attachments:
          description: Displays an array of attachments from the API.
          type: array
          items:
            $ref: '#/components/schemas/Attachment'
      type: object
    ReportWithRows:
      type: object
      properties:
        Reports:
          type: array
          items:
            $ref: '#/components/schemas/ReportWithRow'
    ReportWithRow:
      externalDocs:
        url: 'http://developer.xero.com/documentation/api/reports/'
      properties:
        ReportID:
          description: Report ID.
          type: string
        ReportName:
          description: Name of the report.
          type: string
        ReportTitle:
          description: Title of the report.
          type: string
        ReportType:
          description: The type of report (BalanceSheet, ProfitLoss, and so on).
          type: string
        ReportTitles:
          description: Report titles array (3 to 4 strings with the report name, orgnisation name, and time frame of the report).
          type: array
          items:
            type: string
        ReportDate:
          description: Date of the report.
          type: string
        Rows:
          type: array
          items:
            $ref: '#/components/schemas/ReportRows'
        UpdatedDateUTC:
          description: Updated Date
          type: string
          x-is-msdate-time: true
          example: "/Date(1573755038314)/"
          readOnly: true
        Fields:
          type: array
          items:
            $ref: '#/components/schemas/ReportFields'
    ReportRows:
      type: object
      properties:
        RowType:
          $ref: '#/components/schemas/RowType'
        Title:
          type: string
        Cells:
          type: array
          items:
            $ref: '#/components/schemas/ReportCell'
        Rows:
          type: array
          items:
            $ref: '#/components/schemas/ReportRow'
    RowType:
      type: string
      enum:
        - Header
        - Section
        - Row
        - SummaryRow
    ReportRow:
      type: object
      properties:
        RowType:
          $ref: '#/components/schemas/RowType'
        Title:
          type: string
        Cells:
          type: array
          items:
            $ref: '#/components/schemas/ReportCell'
    ReportCell:
      type: object
      properties:
        Value:
          type: string
        Attributes:
          type: array
          items:
            $ref: '#/components/schemas/ReportAttribute'
    ReportAttribute:
      externalDocs:
        url: 'http://developer.xero.com/documentation/api/reports/'
      properties:
        Id:
          type: string
        Value:
          type: string
    ReportFields:
      type: object
      properties:
        FieldID:
          type: string
        Description:
          type: string
        Value:
          type: string
    Reports:
      type: object
      x-isObjectArray: true
      properties:
        Reports:
          type: array
          items:
            $ref: '#/components/schemas/Report'
    Report:
      externalDocs:
        url: 'http://developer.xero.com/documentation/api/reports/'
      properties:
        ReportID:
          description: See Prepayment Types.
          type: string
        ReportName:
          description: See Prepayment Types.
          type: string
        ReportType:
          description: See Prepayment Types.
          type: string
          enum:
            - AgedPayablesByContact
        ReportTitle:
          description: See Prepayment Types.
          type: string
        ReportDate:
          description: Date of report.
          type: string
        UpdatedDateUTC:
          description: Updated date.
          type: string
          x-is-msdate-time: true
          example: "/Date(1573755038314)/"
          readOnly: true
        Contacts:
          type: array
          items:
            $ref: '#/components/schemas/TenNinetyNineContact'
    TenNinetyNineContact:
      properties:
        Box1:
          description: Box 1 on the 1099 Form.
          type: number
          format: double
          x-is-money: true
        Box2:
          description: Box 2 on the 1099 Form.
          type: number
          format: double
          x-is-money: true
        Box3:
          description: Box 3 on the 1099 Form.
          type: number
          format: double
          x-is-money: true
        Box4:
          description: Box 4 on the 1099 Form.
          type: number
          format: double
          x-is-money: true
        Box5:
          description: Box 5 on the 1099 Form.
          type: number
          format: double
          x-is-money: true
        Box6:
          description: Box 6 on the 1099 Form.
          type: number
          format: double
          x-is-money: true
        Box7:
          description: Box 7 on the 1099 Form.
          type: number
          format: double
          x-is-money: true
        Box8:
          description: Box 8 on the 1099 Form.
          type: number
          format: double
          x-is-money: true
        Box9:
          description: Box 9 on the 1099 Form.
          type: number
          format: double
          x-is-money: true
        Box10:
          description: Box 10 on the 1099 Form.
          type: number
          format: double
          x-is-money: true
        Box11:
          description: Box 11 on the 1099 Form.
          type: number
          format: double
          x-is-money: true
        Box13:
          description: Box 13 on the 1099 Form.
          type: number
          format: double
          x-is-money: true
        Box14:
          description: Box 14 on the 1099 Form.
          type: number
          format: double
          x-is-money: true
        Name:
          description: Contact name on the 1099 Form.
          type: string
        FederalTaxIDType:
          description: Contact Fed Tax ID type.
          type: string
        City:
          description: Contact city on the 1099 Form.
          type: string
        Zip:
          description: Contact zip on the 1099 Form.
          type: string
        State:
          description: Contact State on the 1099 Form.
          type: string
        Email:
          description: Contact email on the 1099 Form.
          type: string
        StreetAddress:
          description: Contact address on the 1099 Form.
          type: string
        TaxID:
          description: Contact tax ID on the 1099 Form.
          type: string
        ContactId:
          description: Contact contact ID.
          type: string
          format: uuid
    Schedule:
      externalDocs:
        url: 'http://developer.xero.com/documentation/api/repeating-invoices/'
      properties:
        Period:
          description: Integer used with the unit, for example 1 (every 1 week), 2 (every 2 months).
          type: integer
        Unit:
          description: One of the following; WEEKLY or MONTHLY.
          type: string
          enum:
            - WEEKLY
            - MONTHLY
        DueDate:
          description: Integer used with due date type, for example 20 (of following month), 31 (of current month).
          type: integer
        DueDateType:
          description: Payment terms.
          type: string
          enum:
            - DAYSAFTERBILLDATE
            - DAYSAFTERBILLMONTH
            - DAYSAFTERINVOICEDATE
            - DAYSAFTERINVOICEMONTH
            - OFCURRENTMONTH
            - OFFOLLOWINGMONTH
        StartDate:
          description: Date the first invoice of the current version of the repeating
            schedule was generated (changes when repeating invoice is edited).
          type: string
          x-is-msdate: true
        NextScheduledDate:
          description: The calendar date of the next invoice in the schedule to generate.
          type: string
          x-is-msdate: true
        EndDate:
          description: Invoice end date. Only returned if the template has an end date set.
          type: string
          x-is-msdate: true
      type: object
    TaxRates:
      type: object
      x-isObjectArray: true
      properties:
        TaxRates:
          type: array
          items:
            $ref: '#/components/schemas/TaxRate'
    TaxType:
      description: See Tax Types. Can only be used on update calls.
      type: string
      enum:
        - OUTPUT
        - INPUT
        - CAPEXINPUT
        - EXEMPTEXPORT
        - EXEMPTEXPENSES
        - EXEMPTCAPITAL
        - EXEMPTOUTPUT
        - INPUTTAXED
        - BASEXCLUDED
        - GSTONCAPIMPORTS
        - GSTONIMPORTS
        - NONE
        - INPUT2
        - ZERORATED
        - OUTPUT2
        - CAPEXINPUT2
        - CAPEXOUTPUT
        - CAPEXOUTPUT2
        - CAPEXSRINPUT
        - CAPEXSROUTPUT
        - ECACQUISITIONS
        - ECZRINPUT
        - ECZROUTPUT
        - ECZROUTPUTSERVICES
        - EXEMPTINPUT
        - REVERSECHARGES
        - RRINPUT
        - RROUTPUT
        - SRINPUT
        - SROUTPUT
        - ZERORATEDINPUT
        - ZERORATEDOUTPUT
        - BLINPUT
        - DSOUTPUT
        - EPINPUT
        - ES33OUTPUT
        - ESN33OUTPUT
        - IGDSINPUT2
        - IMINPUT2
        - MEINPUT
        - NRINPUT
        - OPINPUT
        - OSOUTPUT
        - TXESSINPUT
        - TXN33INPUT
        - TXPETINPUT
        - TXREINPUT
        - INPUT3
        - INPUT4
        - OUTPUT3
        - OUTPUT4
        - SROUTPUT2
        - TXCA
        - SRCAS
        - BLINPUT2
        - DRCHARGESUPPLY20
        - DRCHARGE20
        - DRCHARGESUPPLY5
        - DRCHARGE5
    Setup:
      externalDocs:
        url: 'https://developer.xero.com/documentation/api-guides/conversions'
      properties:
        ConversionDate:
          $ref: '#/components/schemas/ConversionDate'
        ConversionBalances:
          description: Balance supplied for each account that has a value as the conversion date.
          type: array
          items:
            $ref: '#/components/schemas/ConversionBalances'
        Accounts:
          type: array
          items:
            $ref: '#/components/schemas/Account'
    ConversionDate:
      description: The date when the organisation starts using Xero.
      type: object
      properties:
        Month:
          description: The month the organisation starts using Xero. Value is an integer between 1 and 12.
          type: integer
          example: 1
        Year:
          description: The year the organisation starts using Xero. Value is an integer greater than 2006.
          type: integer
          example: 2020
    ConversionBalances:
      description: Balance supplied for each account that has a value as the conversion date.
      properties:
        AccountCode:
          description: The account code for an account.
          type: string
        Balance:
          description: The opening balances of the account. Debits are positive values and credits are negative values.
          type: number
          format: double
        BalanceDetails:
          type: array
          items:
            $ref: '#/components/schemas/BalanceDetails'
      type: object
    BalanceDetails:
      description: An array to specify multiple currency balances of an account.
      properties:
        Balance:
          description: The opening balances of the account. Debits are positive values and credits are negative values.
          type: number
          format: double
        CurrencyCode:
          description: The currency of the balance (not required for base currency).
          type: string
        CurrencyRate:
          description: (Optional) Exchange rate on which to base currency when money is spent or received. If not specified, the XE rate for the day is applied.
          type: number
          format: double
          x-is-money: true
      type: object
    ImportSummaryObject:
      externalDocs:
        url: 'https://developer.xero.com/documentation/api-guides/conversions'
      properties:
        ImportSummary:
          $ref: '#/components/schemas/ImportSummary'
    ImportSummary:
      externalDocs:
        url: 'https://developer.xero.com/documentation/api-guides/conversions'
      description: A summary of the import from the setup endpoint.
      type: object
      properties:
        Accounts:
          $ref: '#/components/schemas/ImportSummaryAccounts'
        Organisation:
          $ref: '#/components/schemas/ImportSummaryOrganisation'
    ImportSummaryAccounts:
      description: A summary of the accounts changes.
      type: object
      properties:
        Total:
          description: The total number of accounts in the org.
          type: integer
          format: int32
        New:
          description: The number of new accounts created.
          type: integer
          format: int32
        Updated:
          description: The number of accounts updated.
          type: integer
          format: int32
        Deleted:
          description: The number of accounts deleted.
          type: integer
          format: int32
        Locked:
          description: The number of locked accounts.
          type: integer
          format: int32
        System:
          description: The number of system accounts.
          type: integer
          format: int32
        Errored:
          description: The number of accounts that had an error.
          type: integer
          format: int32
        Present:
          type: boolean
        NewOrUpdated:
          description: The number of new or updated accounts.
          type: integer
          format: int32
    ImportSummaryOrganisation:
      type: object
      properties:
        Present:
          type: boolean
    TaxRate:
      externalDocs:
        url: 'http://developer.xero.com/documentation/api/tax-rates/'
      properties:
        Name:
          description: Name of the tax rate.
          type: string
        TaxType:
          description: The tax type.
          type: string
        TaxComponents:
          description: See Tax Components.
          type: array
          items:
            $ref: '#/components/schemas/TaxComponent'
        Status:
          description: See Status Codes.
          type: string
          enum:
            - ACTIVE
            - DELETED
            - ARCHIVED
            - PENDING
        ReportTaxType:
          description: See ReportTaxTypes
          type: string
          enum:
            - AVALARA
            - BASEXCLUDED
            - CAPITALSALESOUTPUT
            - CAPITALEXPENSESINPUT
            - ECOUTPUT
            - ECOUTPUTSERVICES
            - ECINPUT
            - ECACQUISITIONS
            - EXEMPTEXPENSES
            - EXEMPTINPUT
            - EXEMPTOUTPUT
            - GSTONIMPORTS
            - INPUT
            - INPUTTAXED
            - MOSSSALES
            - NONE
            - NONEOUTPUT
            - OUTPUT
            - PURCHASESINPUT
            - SALESOUTPUT
            - EXEMPTCAPITAL
            - EXEMPTEXPORT
            - CAPITALEXINPUT
            - GSTONCAPIMPORTS
            - GSTONCAPITALIMPORTS
            - REVERSECHARGES
            - PAYMENTS
            - INVOICE
            - CASH
            - ACCRUAL
            - FLATRATECASH
            - FLATRATEACCRUAL
            - ACCRUALS
            - TXCA
            - SRCAS
            - DSOUTPUT
            - BLINPUT2
            - EPINPUT
            - IMINPUT2
            - MEINPUT
            - IGDSINPUT2
            - ESN33OUTPUT
            - OPINPUT
            - OSOUTPUT
            - TXN33INPUT
            - TXESSINPUT
            - TXREINPUT
            - TXPETINPUT
            - NRINPUT
            - ES33OUTPUT
            - ZERORATEDINPUT
            - ZERORATEDOUTPUT
            - DRCHARGESUPPLY
            - DRCHARGE
            - CAPINPUT
            - CAPIMPORTS
            - IMINPUT
            - INPUT2
            - CIUINPUT
            - SRINPUT
            - OUTPUT2
            - SROUTPUT
            - CAPOUTPUT
            - SROUTPUT2
            - CIUOUTPUT
            - ZROUTPUT
            - ZREXPORT
            - ACC28PLUS
            - ACCUPTO28
            - OTHEROUTPUT
            - SHOUTPUT
            - ZRINPUT
            - BADDEBT
            - OTHERINPUT
        CanApplyToAssets:
          description: Boolean to describe if the tax rate can be used for asset accounts.
          readOnly: true
          type: boolean
        CanApplyToEquity:
          description: Boolean to describe if the tax rate can be used for equity accounts.
          readOnly: true
          type: boolean
        CanApplyToExpenses:
          description:  Boolean to describe if the tax rate can be used for expense accounts.
          readOnly: true
          type: boolean
        CanApplyToLiabilities:
          description: Boolean to describe if the tax rate can be used for liability accounts.
          readOnly: true
          type: boolean
        CanApplyToRevenue:
          description: Boolean to describe if the tax rate can be used for revenue accounts.
          readOnly: true
          type: boolean
        DisplayTaxRate:
          description: Tax rate (decimal to 4dp), for example 12.5000.
          readOnly: true
          type: number
          format: double
          x-is-money: true
        EffectiveRate:
          description: Effective tax rate (decimal to 4dp), for example 12.5000.
          readOnly: true
          type: number
          format: double
          x-is-money: true
      type: object
    TaxComponent:
      externalDocs:
        url: 'http://developer.xero.com/documentation/api/tax-rates/'
      properties:
        Name:
          description: Name of tax component.
          type: string
        Rate:
          description: Tax rate (up to 4dp).
          type: number
          format: double
          x-is-money: true
        IsCompound:
          description: Boolean to describe if the tax rate is compounded.
          type: boolean
        IsNonRecoverable:
          description: Boolean to describe if the tax rate is non-recoverable. Non-recoverable rates are only applicable to Canadian organisations.
          type: boolean
      type: object
    TrackingCategories:
      type: object
      x-isObjectArray: true
      properties:
        TrackingCategories:
          type: array
          items:
            $ref: '#/components/schemas/TrackingCategory'
    TrackingCategory:
      externalDocs:
        url: 'http://developer.xero.com/documentation/api/tracking-categories/'
      properties:
        TrackingCategoryID:
          description: The Xero identifier for a tracking category, for example 297c2dc5-cc47-4afd-8ec8-74990b8761e9
          type: string
          format: uuid
        TrackingOptionID:
          description: The Xero identifier for a tracking option, for example dc54c220-0140-495a-b925-3246adc0075f
          type: string
          format: uuid
        Name:
          description: The name of the tracking category, for example Department, Region (max
            length = 100)
          maxLength: 100
          type: string
        Option:
          description: The option name of the tracking option, for example East, West (max
            length = 100)
          maxLength: 100
          type: string
        Status:
          description: The status of a tracking category.
          type: string
          enum:
            - ACTIVE
            - ARCHIVED
            - DELETED
        Options:
          description: See Tracking Options.
          type: array
          items:
            $ref: '#/components/schemas/TrackingOption'
      type: object
    TrackingOptions:
      type: object
      x-isObjectArray: true
      properties:
        Options:
          type: array
          items:
            $ref: '#/components/schemas/TrackingOption'
    TrackingOption:
      externalDocs:
        url: 'http://developer.xero.com/documentation/api/tracking-categories/'
      properties:
        TrackingOptionID:
          description: The Xero identifier for a tracking option, for example
            ae777a87-5ef3-4fa0-a4f0-d10e1f13073a
          type: string
          format: uuid
        Name:
          description: The name of the tracking option, for example Marketing, East (max length = 100).
          maxLength: 100
          type: string
        Status:
          description: The status of a tracking option.
          type: string
          enum:
            - ACTIVE
            - ARCHIVED
            - DELETED
        TrackingCategoryID:
          description: Filter by a tracking category, for example 297c2dc5-cc47-4afd-8ec8-74990b8761e9
          type: string
          format: uuid
      type: object
    SalesTrackingCategory:
      externalDocs:
        url: 'http://developer.xero.com/documentation/api/tracking-categories/'
      properties:
        TrackingCategoryName:
          description: The default sales tracking category name for contacts.
          type: string
        TrackingOptionName:
          description: The default purchase tracking category name for contacts.
          type: string
      type: object
    Users:
      type: object
      x-isObjectArray: true
      properties:
        Users:
          type: array
          items:
            $ref: '#/components/schemas/User'
    User:
      externalDocs:
        url: 'http://developer.xero.com/documentation/api/users/'
      properties:
        UserID:
          description: Xero identifier.
          type: string
          format: uuid
        EmailAddress:
          description: Email address of the user.
          type: string
        FirstName:
          description: First name of the user.
          type: string
        LastName:
          description: Last name of the user.
          type: string
        UpdatedDateUTC:
          description: Timestamp of the last change to the user.
          type: string
          x-is-msdate-time: true
          example: "/Date(1573755038314)/"
          readOnly: true
        IsSubscriber:
          description: Boolean to indicate if the user is the subscriber.
          type: boolean
        OrganisationRole:
          description: User role that defines permissions in Xero and via the API (READONLY, INVOICEONLY, STANDARD, FINANCIALADVISER, and so on).
          type: string
          enum:
            - READONLY
            - INVOICEONLY
            - STANDARD
            - FINANCIALADVISER
            - MANAGEDCLIENT
            - CASHBOOKCLIENT
            - UNKNOWN
      type: object
    Error:
      externalDocs:
        url: 'https://developer.xero.com/documentation/api/http-response-codes'
      properties:
        ErrorNumber:
          description: Exception number.
          type: integer
        Type:
          description: Exception type.
          type: string
        Message:
          description: Exception message.
          type: string
        Elements:
          description: Array of elements of the validation errors.
          type: array
          items:
            $ref: '#/components/schemas/Element'
      type: object
    Element:
      externalDocs:
        url: 'https://developer.xero.com/documentation/api/http-response-codes'
      properties:
        ValidationErrors:
          description: Array of the validation error message.
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
        BatchPaymentID:
          description: Unique ID for the batch payment object with the validation error.
          type: string
          format: uuid
        BankTransactionID:
          type: string
          format: uuid
        CreditNoteID:
          type: string
          format: uuid
        ContactID:
          type: string
          format: uuid
        InvoiceID:
          type: string
          format: uuid
        ItemID:
          type: string
          format: uuid
        PurchaseOrderID:
          type: string
          format: uuid
      type: object
    ValidationError:
      externalDocs:
        url: 'https://developer.xero.com/documentation/api/http-response-codes'
      properties:
        Message:
          description: Validation error message.
          type: string
      type: object
